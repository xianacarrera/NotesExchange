{
  "contractName": "NotesExchange",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.Notes",
          "name": "notes",
          "type": "tuple"
        }
      ],
      "name": "NotesForSaleDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.Notes",
          "name": "notes",
          "type": "tuple"
        }
      ],
      "name": "NotesForSaleEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.Notes",
          "name": "notes",
          "type": "tuple"
        }
      ],
      "name": "NotesPublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.NotesService",
          "name": "renting",
          "type": "tuple"
        }
      ],
      "name": "NotesServiceAborted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.NotesService",
          "name": "renting",
          "type": "tuple"
        }
      ],
      "name": "NotesServiceAwaitingAcceptance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.NotesService",
          "name": "renting",
          "type": "tuple"
        }
      ],
      "name": "NotesServiceCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.NotesService",
          "name": "renting",
          "type": "tuple"
        }
      ],
      "name": "NotesServiceDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.NotesService",
          "name": "renting",
          "type": "tuple"
        }
      ],
      "name": "NotesServicePending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct NotesExchange.Notes",
          "name": "notes",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "NotesSold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "weiToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct NotesExchange.Notes",
          "name": "note",
          "type": "tuple"
        }
      ],
      "name": "owns",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "notesId",
          "type": "uint256"
        }
      ],
      "name": "buyNotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "notesValue",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "publishNotesForSale",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "notesId",
          "type": "uint256"
        }
      ],
      "name": "enableNotesForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "notesId",
          "type": "uint256"
        }
      ],
      "name": "disableNotesForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "subject",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "fulfiller",
          "type": "address"
        }
      ],
      "name": "createNotesService",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newFulfiller",
          "type": "address"
        }
      ],
      "name": "delegateNotesService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        }
      ],
      "name": "rejectService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        }
      ],
      "name": "cancelRequestedService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "fulfillNotesService",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        }
      ],
      "name": "acceptNotesService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllNotesOnSale",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct NotesExchange.Notes[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMyNotes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct NotesExchange.Notes[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMyNotesOnSale",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct NotesExchange.Notes[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllNotes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct NotesExchange.Notes[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllServices",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct NotesExchange.NotesService[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNotesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "notesId",
          "type": "uint256"
        }
      ],
      "name": "getNote",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "notesValue",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "noteTaker",
              "type": "address"
            },
            {
              "internalType": "address payable[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "forBuy",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "notesHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct NotesExchange.Notes",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getServicesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rentingId",
          "type": "uint256"
        }
      ],
      "name": "getService",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notesValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "noteTaker",
                  "type": "address"
                },
                {
                  "internalType": "address payable[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "forBuy",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "notesHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "internalType": "struct NotesExchange.Notes",
              "name": "notes",
              "type": "tuple"
            },
            {
              "internalType": "enum NotesExchange.State",
              "name": "transactionState",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "depositedMoney",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "renter",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "fulfiller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "subject",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct NotesExchange.NotesService",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"}],\"name\":\"NotesForSaleDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"}],\"name\":\"NotesForSaleEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"}],\"name\":\"NotesPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.NotesService\",\"name\":\"renting\",\"type\":\"tuple\"}],\"name\":\"NotesServiceAborted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.NotesService\",\"name\":\"renting\",\"type\":\"tuple\"}],\"name\":\"NotesServiceAwaitingAcceptance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.NotesService\",\"name\":\"renting\",\"type\":\"tuple\"}],\"name\":\"NotesServiceCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.NotesService\",\"name\":\"renting\",\"type\":\"tuple\"}],\"name\":\"NotesServiceDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.NotesService\",\"name\":\"renting\",\"type\":\"tuple\"}],\"name\":\"NotesServicePending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"NotesSold\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"}],\"name\":\"acceptNotesService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"notesId\",\"type\":\"uint256\"}],\"name\":\"buyNotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"}],\"name\":\"cancelRequestedService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"}],\"name\":\"createNotesService\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newFulfiller\",\"type\":\"address\"}],\"name\":\"delegateNotesService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"notesId\",\"type\":\"uint256\"}],\"name\":\"disableNotesForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"notesId\",\"type\":\"uint256\"}],\"name\":\"enableNotesForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"fulfillNotesService\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllNotes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllNotesOnSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllServices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct NotesExchange.NotesService[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNotes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNotesOnSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"notesId\",\"type\":\"uint256\"}],\"name\":\"getNote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNotesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"}],\"name\":\"getService\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"notes\",\"type\":\"tuple\"},{\"internalType\":\"enum NotesExchange.State\",\"name\":\"transactionState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"depositedMoney\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct NotesExchange.NotesService\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getServicesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"noteTaker\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"forBuy\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"notesHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct NotesExchange.Notes\",\"name\":\"note\",\"type\":\"tuple\"}],\"name\":\"owns\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"notesValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"publishNotesForSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rentingId\",\"type\":\"uint256\"}],\"name\":\"rejectService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"weiToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NotesExchange.sol\":\"NotesExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"project:/contracts/NotesExchange.sol\":{\"keccak256\":\"0x8c77553f435d30b60e28aa78d2b024dc8bbc2d4c7d25380cea07f92a296c7c75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22249d0a4d0322b06b547c5e9570d1c14a956afebcfffc6980d9160d7e3e32e9\",\"dweb:/ipfs/QmbDSscRBBTxZ9EeqFcngJ9oHoGsfZcVGbCBZqDDLu8yWy\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22972:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:6"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:6",
                "type": ""
              }
            ],
            "src": "14:131:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "237:228:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "283:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "292:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "295:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "285:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "285:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "285:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "258:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "267:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "279:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "250:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "247:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "308:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "331:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "318:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "308:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "350:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "380:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "391:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "363:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "363:32:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "354:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "429:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "404:24:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "404:31:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "444:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "454:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "444:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "195:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "206:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "218:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "226:6:6",
                "type": ""
              }
            ],
            "src": "150:315:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "589:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "581:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "623:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "634:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "616:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "616:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "540:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "551:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "562:4:6",
                "type": ""
              }
            ],
            "src": "470:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "684:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "701:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "708:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "713:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "704:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "704:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "694:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "694:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "741:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "734:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "734:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "765:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "768:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "758:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "758:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "652:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "830:209:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "840:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "856:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "850:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "840:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "868:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "890:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "898:6:6",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "886:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:19:6"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "872:10:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "980:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "982:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "982:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "982:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "923:10:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "943:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "947:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "939:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "939:10:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "951:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "935:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "935:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "920:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:34:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "959:10:6"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "971:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "956:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "917:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "914:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1018:2:6",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1022:10:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1011:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1011:22:6"
                }
              ]
            },
            "name": "allocate_memory_3133",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "819:6:6",
                "type": ""
              }
            ],
            "src": "784:255:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1089:230:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1099:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1109:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1109:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1099:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1127:58:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1149:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "1165:4:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1171:2:6",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1161:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1161:13:6"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1180:2:6",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1176:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1176:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1157:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1145:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1145:40:6"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1131:10:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1260:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1262:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1262:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1262:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1203:10:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1223:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1227:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1219:10:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1231:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1215:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1215:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1200:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:34:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1239:10:6"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1251:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1236:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1197:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1194:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1298:2:6",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1302:10:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1291:22:6"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1069:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1078:6:6",
                "type": ""
              }
            ],
            "src": "1044:275:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1381:85:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1391:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1413:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1400:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1391:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1454:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1429:24:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1429:31:6"
                }
              ]
            },
            "name": "abi_decode_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1360:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1371:5:6",
                "type": ""
              }
            ],
            "src": "1324:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:723:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1592:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1601:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1604:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1594:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1594:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1594:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1579:4:6",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1567:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1567:17:6"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1586:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1563:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1563:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1556:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1553:55:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1617:30:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1640:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1627:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1627:20:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1621:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1656:14:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1666:4:6",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1660:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1709:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1711:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1711:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1711:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1685:2:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1697:2:6",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1701:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1693:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1693:10:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1705:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1689:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1689:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1682:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1682:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1679:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1740:20:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:1:6",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1757:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "1750:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:10:6"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1744:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1769:39:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1800:2:6"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1804:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1796:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1796:11:6"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1780:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:28:6"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "1773:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1817:16:6",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "1830:3:6"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "1821:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "1849:3:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1854:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:15:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1866:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "1877:3:6"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1882:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1894:38:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1916:6:6"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1924:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1912:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1912:15:6"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1929:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1908:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:24:6"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "1898:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1960:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1969:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1972:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1962:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1962:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1962:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1947:6:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1955:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1944:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1944:15:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1941:35:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1985:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2000:6:6"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2008:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1996:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:15:6"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "1989:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2076:161:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2090:30:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2116:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "2103:12:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2103:17:6"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2094:5:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2158:5:6"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "2133:24:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2133:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2133:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2184:3:6"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2189:5:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2177:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2177:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2177:18:6"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2208:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2219:3:6"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "2224:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2215:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2215:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2208:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2031:3:6"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2036:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2028:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:15:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2044:23:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2046:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2057:3:6"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "2062:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2053:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2053:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2046:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2024:3:6",
                    "statements": []
                  },
                  "src": "2020:217:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:14:6",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "2255:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2246:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_array_address_payable_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1517:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1525:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1533:5:6",
                "type": ""
              }
            ],
            "src": "1471:795:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2317:114:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2327:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2349:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2336:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2336:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2327:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2409:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2418:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2421:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2411:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2411:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2411:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2378:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2399:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2392:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2392:13:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2385:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2385:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2375:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2368:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2365:60:6"
                }
              ]
            },
            "name": "abi_decode_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2296:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2307:5:6",
                "type": ""
              }
            ],
            "src": "2271:160:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2489:478:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2538:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2547:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2550:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2540:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2540:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2540:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2517:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2525:4:6",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2513:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2513:17:6"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2532:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2509:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2509:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2499:55:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2563:30:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2586:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2573:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:20:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2567:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2632:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2634:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2634:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2634:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2608:2:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2620:2:6",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2624:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2616:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2616:10:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2628:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2612:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2612:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2605:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2605:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2602:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2663:70:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2706:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2710:4:6",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2702:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2702:13:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2721:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2717:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2717:7:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2698:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2698:27:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2727:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2694:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:38:6"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2678:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2678:55:6"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "2667:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "2749:7:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2758:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2742:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2742:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2742:19:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2809:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2818:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2821:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2811:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2811:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2811:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2784:6:6"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2792:2:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2780:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2780:15:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2797:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2776:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:26:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2804:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2773:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2770:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "2851:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2860:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2847:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2871:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2879:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2867:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2867:17:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2886:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2834:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2834:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2834:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "2913:7:6"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2922:2:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2909:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2909:16:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2927:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2905:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2905:27:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2934:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2898:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2898:38:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2945:16:6",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "2954:7:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2945:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2463:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2471:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2479:5:6",
                "type": ""
              }
            ],
            "src": "2436:531:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3081:1334:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3127:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3136:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3139:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3129:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3129:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3129:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3102:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3111:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3098:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3123:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3094:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3094:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3091:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3152:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3178:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3165:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3156:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3222:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3197:24:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3197:31:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3237:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3247:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3237:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3261:46:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3292:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3303:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3288:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3288:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3275:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3275:32:6"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3265:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3316:28:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3334:2:6",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3338:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3330:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3330:10:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3342:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3326:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:18:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3320:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3371:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3380:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3383:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3373:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3373:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3373:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3359:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3367:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3356:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:14:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3353:34:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3396:32:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3410:9:6"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3421:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3406:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:22:6"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3400:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3470:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3479:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3482:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3472:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3472:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3472:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3448:7:6"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3457:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3444:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3444:16:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3462:6:6",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3440:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3440:29:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3437:49:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3495:37:6",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_3133",
                      "nodeType": "YulIdentifier",
                      "src": "3510:20:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:22:6"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3499:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3548:7:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3570:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3557:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3557:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3541:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3541:33:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "3594:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3603:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3590:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3590:16:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3625:2:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3629:2:6",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3621:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3621:11:6"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3608:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3608:25:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3583:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3583:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3583:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "3654:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3663:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3650:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3650:16:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3699:2:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3703:2:6",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3695:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3695:11:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3668:26:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3668:39:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3643:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3643:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3643:65:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3717:41:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3750:2:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3754:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3746:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3746:11:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3733:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3733:25:6"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "3721:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3787:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3796:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3799:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3789:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3789:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3789:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "3773:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3783:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3770:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3767:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "3823:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3832:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3819:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3819:16:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3878:2:6"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "3882:8:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3874:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3874:17:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3893:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "3837:36:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3837:64:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3812:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:90:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3812:90:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "3922:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3931:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3918:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3957:2:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3961:3:6",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3953:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3953:12:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3937:15:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3937:29:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3911:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:56:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3911:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "3987:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3996:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3983:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3983:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4019:2:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4023:3:6",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4015:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4015:12:6"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4002:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4002:26:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3976:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3976:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3976:53:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4038:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4071:2:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4075:3:6",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4067:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4067:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4054:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4054:26:6"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "4042:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4109:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4118:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4121:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4111:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4111:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4111:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "4095:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4105:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4092:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4092:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4089:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "4145:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4154:3:6",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4141:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4141:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4182:2:6"
                              },
                              {
                                "name": "offset_2",
                                "nodeType": "YulIdentifier",
                                "src": "4186:8:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4178:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4178:17:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4197:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string",
                          "nodeType": "YulIdentifier",
                          "src": "4160:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4160:45:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4134:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4134:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4134:72:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4215:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4248:2:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4252:3:6",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4244:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4244:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4231:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4231:26:6"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "4219:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4286:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4295:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4298:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4288:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4288:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4288:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "4272:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4282:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4269:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4269:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4266:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "4322:7:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4331:3:6",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4359:2:6"
                              },
                              {
                                "name": "offset_3",
                                "nodeType": "YulIdentifier",
                                "src": "4363:8:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4355:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4355:17:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4374:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string",
                          "nodeType": "YulIdentifier",
                          "src": "4337:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:45:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4311:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4311:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4311:72:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4392:17:6",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4402:7:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4392:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_struct$_Notes_$123_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3039:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3050:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3062:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3070:6:6",
                "type": ""
              }
            ],
            "src": "2972:1443:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4461:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4478:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4497:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4490:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4490:13:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4483:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4483:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4471:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4471:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4471:34:6"
                }
              ]
            },
            "name": "abi_encode_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4445:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4452:3:6",
                "type": ""
              }
            ],
            "src": "4420:91:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4611:92:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4621:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4633:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4644:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4629:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4629:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4621:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4663:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4688:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4681:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4681:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4674:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4674:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4656:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4656:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4656:41:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4580:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4591:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4602:4:6",
                "type": ""
              }
            ],
            "src": "4516:187:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4808:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4825:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4830:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4818:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4818:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4818:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4846:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4865:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4870:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4861:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4861:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4846:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_array_struct_NotesService_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4776:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4781:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4792:11:6",
                "type": ""
              }
            ],
            "src": "4708:173:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4938:60:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4955:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4964:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4979:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4984:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4975:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4975:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4988:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4971:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4971:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4960:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4960:31:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4948:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4948:44:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4948:44:6"
                }
              ]
            },
            "name": "abi_encode_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4922:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4929:3:6",
                "type": ""
              }
            ],
            "src": "4886:112:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5072:400:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5082:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5102:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5096:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5096:12:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5086:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5124:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5129:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5117:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5117:19:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5145:14:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5155:4:6",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5149:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5168:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5179:3:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5184:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5175:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5175:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5168:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5196:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5214:5:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5221:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5210:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:14:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5200:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5233:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5242:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5237:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5301:146:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5322:3:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5337:6:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5331:5:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5331:13:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5354:3:6",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5359:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5350:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5350:11:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5363:1:6",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "5346:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5346:19:6"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5327:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5327:39:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5315:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5315:52:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5315:52:6"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5380:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5391:3:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5396:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5387:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5387:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5380:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5412:25:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5426:6:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5434:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5422:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5422:15:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5412:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5263:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5266:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5260:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5260:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5274:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5276:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5285:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5288:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5281:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5281:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5276:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5256:3:6",
                    "statements": []
                  },
                  "src": "5252:195:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5456:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5463:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5456:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_payable_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5049:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5056:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5064:3:6",
                "type": ""
              }
            ],
            "src": "5003:469:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5530:205:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5540:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5549:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5544:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5609:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5634:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5639:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5630:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5630:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5653:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5658:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5649:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5649:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5643:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5643:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5623:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5623:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5623:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5570:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5573:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5567:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5581:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5583:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5592:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5595:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5588:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5588:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5583:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5563:3:6",
                    "statements": []
                  },
                  "src": "5559:113:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5698:31:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5711:3:6"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5716:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5707:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5707:16:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5725:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5700:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5700:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5700:27:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5687:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5690:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5684:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5684:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "5681:48:6"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5508:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5513:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5518:6:6",
                "type": ""
              }
            ],
            "src": "5477:258:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5790:208:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5800:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5820:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5814:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:12:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5804:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5842:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5847:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5835:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5835:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5835:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5889:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5896:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5885:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5885:16:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5907:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5912:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5903:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5903:14:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5919:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5863:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5863:63:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5863:63:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5935:57:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5950:3:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5963:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5971:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5959:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5959:15:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5980:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5976:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5976:7:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5955:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5955:29:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5946:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5946:39:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5987:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5942:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5942:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5935:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5767:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5774:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5782:3:6",
                "type": ""
              }
            ],
            "src": "5740:258:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6059:865:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6069:16:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6079:6:6",
                    "type": "",
                    "value": "0x0100"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6073:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6101:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6112:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6106:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6106:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6094:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6094:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6094:25:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6139:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6144:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6135:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6135:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6161:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6168:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6157:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6157:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6151:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6151:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6128:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6128:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6128:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6195:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6200:4:6",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6191:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6191:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6221:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6228:4:6",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6217:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6217:16:6"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6211:5:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6211:23:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6244:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6249:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6240:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6240:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6253:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6236:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6236:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6207:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6207:49:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6184:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6184:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6184:73:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6266:43:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6296:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6303:4:6",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6292:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6292:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6286:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6286:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "6270:12:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6329:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6334:4:6",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6325:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6325:14:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6341:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6318:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6318:26:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6318:26:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6353:76:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "6402:12:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6420:3:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6425:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6416:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6416:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_payable_dyn",
                      "nodeType": "YulIdentifier",
                      "src": "6365:36:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6365:64:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "6357:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6438:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6470:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6477:4:6",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6466:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6466:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6460:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6460:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "6442:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "6508:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6528:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6533:4:6",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6524:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6524:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6492:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6492:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6559:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6564:4:6",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6555:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6581:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6588:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6577:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6577:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6571:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6571:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:47:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6604:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6636:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6643:4:6",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6632:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6632:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6626:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6626:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "6608:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6669:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6674:4:6",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6665:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6665:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6685:4:6"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6691:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6681:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6681:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6658:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:38:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6705:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "6737:14:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6753:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6719:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6719:39:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6709:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6767:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6799:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6806:4:6",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6795:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6795:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6789:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6789:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_3",
                      "nodeType": "YulTypedName",
                      "src": "6771:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6832:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6837:4:6",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6828:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6828:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6848:6:6"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6856:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6844:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6844:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6821:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6821:40:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6821:40:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6870:48:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_3",
                        "nodeType": "YulIdentifier",
                        "src": "6895:14:6"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6911:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6877:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6877:41:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6870:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_Notes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6036:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6043:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6051:3:6",
                "type": ""
              }
            ],
            "src": "6003:921:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6961:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6978:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6985:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6990:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6981:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6981:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6971:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6971:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7018:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7021:4:6",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7011:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7011:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7011:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7042:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7045:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7035:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7035:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7035:15:6"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "6929:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7108:186:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7150:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7171:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7178:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7183:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7174:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7174:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7164:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7164:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7164:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7215:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7218:4:6",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7208:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7208:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7208:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7243:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7246:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7236:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7236:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7236:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7131:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7138:1:6",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7128:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7128:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7121:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7121:20:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7118:143:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7277:3:6"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7282:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7270:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7270:18:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7270:18:6"
                }
              ]
            },
            "name": "abi_encode_enum_State",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7092:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7099:3:6",
                "type": ""
              }
            ],
            "src": "7061:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7362:851:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7372:16:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7382:6:6",
                    "type": "",
                    "value": "0x0100"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7376:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7404:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7415:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7409:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7409:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7397:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7397:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7397:25:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7431:43:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7461:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7468:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7457:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7457:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7451:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7451:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "7435:12:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7494:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7499:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7490:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7490:14:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7506:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7483:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7483:26:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7483:26:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7518:63:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "7554:12:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7572:3:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7577:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7568:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7568:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Notes",
                      "nodeType": "YulIdentifier",
                      "src": "7530:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7530:51:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7522:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7590:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7622:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7629:4:6",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7618:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7618:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7612:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7612:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "7594:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "7666:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7686:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7691:4:6",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7682:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7682:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_State",
                      "nodeType": "YulIdentifier",
                      "src": "7644:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7644:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7644:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7717:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7722:4:6",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7713:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7713:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7739:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7746:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7735:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7735:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7729:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7729:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7706:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7706:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7706:47:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7762:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7794:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7801:4:6",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7790:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7790:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7784:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7784:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "7766:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7816:29:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7834:3:6",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7839:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7830:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7830:11:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7843:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7826:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7826:19:6"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "7820:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7865:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7870:4:6",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7861:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7861:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memberValue0_2",
                            "nodeType": "YulIdentifier",
                            "src": "7881:14:6"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7897:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7877:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7877:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7854:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7854:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7854:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7921:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7926:4:6",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7917:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7917:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7947:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7954:4:6",
                                    "type": "",
                                    "value": "0xa0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7943:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7943:16:6"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7937:5:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7937:23:6"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7962:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7933:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7933:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7910:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7910:56:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7910:56:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7975:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8007:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8014:4:6",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8003:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8003:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7997:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7997:23:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_3",
                      "nodeType": "YulTypedName",
                      "src": "7979:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8040:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8045:4:6",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8036:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8036:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8056:4:6"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8062:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8052:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8052:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8029:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8029:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8029:38:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8076:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_3",
                        "nodeType": "YulIdentifier",
                        "src": "8108:14:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8124:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8090:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8090:39:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8080:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8149:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8154:4:6",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8145:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8145:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8171:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8178:4:6",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8167:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8167:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8161:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8161:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8138:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8138:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8138:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8194:13:6",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "8201:6:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8194:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_NotesService",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7339:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7346:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7354:3:6",
                "type": ""
              }
            ],
            "src": "7299:914:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8427:645:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8437:12:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8447:2:6",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8441:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8458:32:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8476:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8487:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8472:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8472:18:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8462:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8506:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8517:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8499:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8499:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8499:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8529:17:6",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "8540:6:6"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "8533:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8555:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8575:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8569:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8569:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8559:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "8598:6:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8606:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8591:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8591:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8591:22:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8622:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8633:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8644:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8629:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8629:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8622:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8656:53:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8678:9:6"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8693:1:6",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8696:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8689:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8689:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8674:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8674:30:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8706:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8670:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8670:39:6"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "8660:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8718:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8736:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8744:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8732:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8732:15:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "8722:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8756:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8765:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8760:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8824:219:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8845:3:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "8858:6:6"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8866:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "8854:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8854:22:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8882:2:6",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "8878:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8878:7:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8850:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8850:36:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8838:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8838:49:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8838:49:6"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8900:63:6",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8947:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8941:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8941:13:6"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "8956:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_struct_NotesService",
                            "nodeType": "YulIdentifier",
                            "src": "8910:30:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8910:53:6"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "8900:6:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8976:25:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8990:6:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8998:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8986:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8986:15:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8976:6:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9014:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9025:3:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9030:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9021:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9021:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9014:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8786:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8789:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8783:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8783:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8797:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8799:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8808:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8811:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8804:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8804:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8799:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8779:3:6",
                    "statements": []
                  },
                  "src": "8775:268:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9052:14:6",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "9060:6:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9052:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8396:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8407:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8418:4:6",
                "type": ""
              }
            ],
            "src": "8218:854:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9147:110:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9193:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9202:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9205:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9195:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9195:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9195:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9168:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9177:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9164:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9164:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9189:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9160:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9160:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9157:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9218:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9241:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9228:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9228:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9218:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9113:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9124:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9136:6:6",
                "type": ""
              }
            ],
            "src": "9077:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9457:638:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9467:12:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9477:2:6",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9471:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9488:32:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9506:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9517:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9502:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9502:18:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9492:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9536:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9547:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9529:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9529:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9529:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9559:17:6",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "9570:6:6"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "9563:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9585:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9605:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9599:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9599:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9589:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "9628:6:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9636:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9621:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9621:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9621:22:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9652:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9663:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9674:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9659:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9659:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9652:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9686:53:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9708:9:6"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9723:1:6",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9726:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9719:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9719:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9704:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9704:30:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9736:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9700:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9700:39:6"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "9690:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9748:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9766:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9774:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9762:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9762:15:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "9752:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9786:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9795:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9790:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9854:212:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9875:3:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "9888:6:6"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9896:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "9884:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9884:22:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9912:2:6",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "9908:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9908:7:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9880:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9880:36:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9868:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9868:49:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9868:49:6"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9930:56:6",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9970:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9964:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9964:13:6"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "9979:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_struct_Notes",
                            "nodeType": "YulIdentifier",
                            "src": "9940:23:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9940:46:6"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "9930:6:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9999:25:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "10013:6:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10021:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10009:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10009:15:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9999:6:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10037:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10048:3:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10053:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10044:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10044:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10037:3:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9816:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9819:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9813:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9813:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9827:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9829:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9838:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9841:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9834:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9834:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9829:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9809:3:6",
                    "statements": []
                  },
                  "src": "9805:261:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10075:14:6",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "10083:6:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10075:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9426:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9437:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9448:4:6",
                "type": ""
              }
            ],
            "src": "9262:833:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10250:661:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10297:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10306:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10309:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10299:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10299:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10299:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10271:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10280:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10267:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10267:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10292:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10263:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10263:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10260:53:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10322:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10349:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10336:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10336:23:6"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "10326:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10368:28:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10386:2:6",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10390:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10382:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10382:10:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10394:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10378:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10378:18:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10372:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10423:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10432:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10435:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10425:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10425:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10425:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10411:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10419:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10408:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10408:14:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10405:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10448:60:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10480:9:6"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10491:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10476:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10476:22:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10500:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "10458:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10458:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10448:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10517:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10550:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10561:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10546:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10546:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10533:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10533:32:6"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "10521:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10594:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10603:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10606:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10596:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10596:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10596:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "10580:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10590:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10577:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10577:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10574:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10619:62:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10651:9:6"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "10662:8:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10647:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10647:24:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10673:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "10629:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10629:52:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10619:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10690:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10717:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10728:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10713:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10713:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10700:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10700:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10690:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10741:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10774:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10785:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10770:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10770:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10757:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10757:32:6"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "10745:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10818:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10827:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10830:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10820:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10820:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10820:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "10804:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10814:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10801:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10801:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10798:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10843:62:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10875:9:6"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "10886:8:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10871:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10871:24:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10897:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "10853:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10853:52:6"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10843:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10192:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10203:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10215:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10223:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10231:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10239:6:6",
                "type": ""
              }
            ],
            "src": "10100:811:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11030:411:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11076:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11085:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11088:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11078:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11078:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11078:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11051:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11060:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11047:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11047:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11072:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11043:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11043:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "11040:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11101:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11128:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11115:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11115:23:6"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "11105:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11181:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11190:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11193:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11183:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11183:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11183:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11153:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11169:2:6",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11173:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "11165:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11165:10:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11177:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11161:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11161:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11150:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11150:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "11147:50:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11206:60:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11238:9:6"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "11249:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11234:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11234:22:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "11258:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "11216:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11216:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11206:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11275:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11302:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11313:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11298:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11298:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11285:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11285:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "11275:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11326:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11356:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11367:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11352:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11352:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11339:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11339:32:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11330:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11405:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11380:24:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11380:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11380:31:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11420:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11430:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "11420:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10980:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10991:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11003:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11011:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11019:6:6",
                "type": ""
              }
            ],
            "src": "10916:525:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11563:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11573:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11585:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11596:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11581:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11581:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11573:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11615:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11630:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11646:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11651:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11642:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11642:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11655:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11638:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11638:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11626:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11626:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11608:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11608:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11608:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11532:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11543:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11554:4:6",
                "type": ""
              }
            ],
            "src": "11446:219:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11815:105:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11832:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11843:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11825:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11825:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11825:21:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11855:59:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11887:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11899:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11910:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11895:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11895:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Notes",
                      "nodeType": "YulIdentifier",
                      "src": "11863:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11863:51:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11855:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Notes_$123_memory_ptr__to_t_struct$_Notes_$123_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11784:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11795:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11806:4:6",
                "type": ""
              }
            ],
            "src": "11670:250:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12075:661:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12122:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12131:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12134:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12124:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12124:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12124:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12096:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12105:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12092:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12092:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12117:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12088:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12088:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "12085:53:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12147:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12170:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12157:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12157:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12147:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12189:46:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12220:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12231:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12216:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12216:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12203:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12203:32:6"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "12193:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12244:28:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12262:2:6",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12266:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12258:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12258:10:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12270:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12254:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12254:18:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12248:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12299:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12308:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12311:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12301:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12301:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12301:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12287:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12295:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12284:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12284:14:6"
                  },
                  "nodeType": "YulIf",
                  "src": "12281:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12324:60:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12356:9:6"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "12367:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12352:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12352:22:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12376:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "12334:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12334:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "12324:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12393:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12426:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12437:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12422:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12422:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12409:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12409:32:6"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "12397:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12470:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12479:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12482:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12472:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12472:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12472:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "12456:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12466:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12453:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12453:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "12450:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12495:62:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12527:9:6"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "12538:8:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12523:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12523:24:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12549:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "12505:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12505:52:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "12495:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12566:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12599:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12610:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12595:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12595:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12582:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12582:32:6"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "12570:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12643:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12652:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12655:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12645:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12645:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12645:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "12629:8:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12639:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12626:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12626:16:6"
                  },
                  "nodeType": "YulIf",
                  "src": "12623:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12668:62:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12700:9:6"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "12711:8:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12696:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12696:24:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12722:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "12678:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12678:52:6"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "12668:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12017:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12028:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12040:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12048:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12056:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12064:6:6",
                "type": ""
              }
            ],
            "src": "11925:811:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12900:112:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12917:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12928:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12910:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12910:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12910:21:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12940:66:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12979:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12991:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13002:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12987:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12987:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_NotesService",
                      "nodeType": "YulIdentifier",
                      "src": "12948:30:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12948:58:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12940:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_NotesService_$142_memory_ptr__to_t_struct$_NotesService_$142_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12869:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12880:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12891:4:6",
                "type": ""
              }
            ],
            "src": "12741:271:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13072:325:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13082:22:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13096:1:6",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "13099:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "13092:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13092:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "13082:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13113:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "13143:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13149:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13139:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13139:12:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "13117:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13190:31:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13192:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "13206:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13214:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "13202:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13202:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13192:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "13170:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13163:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13163:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "13160:61:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13280:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13301:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13308:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13313:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "13304:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13304:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13294:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13294:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13294:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13345:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13348:4:6",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13338:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13338:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13338:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13373:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13376:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13366:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13366:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13366:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "13236:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13259:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13267:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "13256:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13256:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13233:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13233:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "13230:161:6"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "13052:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13061:6:6",
                "type": ""
              }
            ],
            "src": "13017:380:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13576:163:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13593:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13604:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13586:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13586:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13586:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13627:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13638:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13623:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13623:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13643:2:6",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13616:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13616:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13616:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13666:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13677:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13662:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13662:18:6"
                      },
                      {
                        "hexValue": "496e76616c6964207374617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13682:15:6",
                        "type": "",
                        "value": "Invalid state"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13655:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13655:43:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13655:43:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13707:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13719:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13730:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13715:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13715:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13707:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13553:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13567:4:6",
                "type": ""
              }
            ],
            "src": "13402:337:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13918:231:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13935:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13946:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13928:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13928:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13928:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13969:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13980:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13965:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13965:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13985:2:6",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13958:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13958:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13958:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14008:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14019:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14004:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14004:18:6"
                      },
                      {
                        "hexValue": "4f6e6c79207468652066756c66696c6c65722063616e2063616c6c2074686973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14024:34:6",
                        "type": "",
                        "value": "Only the fulfiller can call this"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13997:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13997:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13997:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14079:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14090:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14075:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14075:18:6"
                      },
                      {
                        "hexValue": "2066756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14095:11:6",
                        "type": "",
                        "value": " function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14068:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14068:39:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14068:39:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14116:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14128:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14139:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14124:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14124:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14116:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_49091f334568c08e875585d9b524a983df59d6e6f811785144fa57f178979b20__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13895:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13909:4:6",
                "type": ""
              }
            ],
            "src": "13744:405:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14186:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14203:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14210:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14215:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14206:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14206:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14196:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14196:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14196:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14243:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14246:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14236:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14236:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14236:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14267:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14270:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14260:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14260:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14260:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14154:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14338:116:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14397:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14399:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14399:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14399:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14369:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14362:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14362:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14355:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14355:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14377:1:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14388:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14384:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14384:6:6"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14392:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14380:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14380:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14374:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14374:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14351:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14351:45:6"
                  },
                  "nodeType": "YulIf",
                  "src": "14348:71:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14428:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14443:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14446:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14439:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14439:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14428:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14317:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14320:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14326:7:6",
                "type": ""
              }
            ],
            "src": "14286:168:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14633:173:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14650:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14661:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14643:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14643:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14643:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14684:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14695:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14680:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14680:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14700:2:6",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14673:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14673:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14673:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14723:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14734:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14719:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14719:18:6"
                      },
                      {
                        "hexValue": "54686520646561646c696e652068617320706173736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14739:25:6",
                        "type": "",
                        "value": "The deadline has passed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14712:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14712:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14712:53:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14774:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14786:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14797:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14782:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14782:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14774:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f3184ef53a77d590f584cb63c29342c2b3d2451cccb94717b4deaa3f4bc80155__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14610:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14624:4:6",
                "type": ""
              }
            ],
            "src": "14459:347:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14896:61:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14906:45:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "slot_value",
                        "nodeType": "YulIdentifier",
                        "src": "14919:10:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14939:3:6",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14944:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14935:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14935:11:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14948:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14931:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14931:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14915:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14915:36:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14906:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "extract_from_storage_value_offsett_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot_value",
                "nodeType": "YulTypedName",
                "src": "14871:10:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14886:5:6",
                "type": ""
              }
            ],
            "src": "14811:146:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15037:65:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15054:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "15057:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15047:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15047:14:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15047:14:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15070:26:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15088:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15091:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "15078:9:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15078:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "15070:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_array_address_payable_dyn_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "15020:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "15028:4:6",
                "type": ""
              }
            ],
            "src": "14962:140:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15184:426:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15194:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15214:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "15208:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15208:12:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15198:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15236:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15241:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15229:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15229:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15229:19:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15257:14:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15267:4:6",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15261:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15280:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15291:3:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15296:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15287:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15287:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15280:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15315:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15318:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15308:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15308:16:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15308:16:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15333:30:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15357:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15360:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "15347:9:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15347:16:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "15337:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15372:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15381:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "15376:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15440:145:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15461:3:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "15476:6:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sload",
                                    "nodeType": "YulIdentifier",
                                    "src": "15470:5:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15470:13:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15493:3:6",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15498:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "15489:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15489:11:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "15502:1:6",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "15485:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15485:19:6"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "15466:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15466:39:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15454:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15454:52:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15454:52:6"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15519:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15530:3:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "15535:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15526:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15526:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15519:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15551:24:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "15565:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15573:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15561:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15561:14:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15551:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15402:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15405:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15399:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15399:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15413:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15415:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "15424:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15427:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15420:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15420:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "15415:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15395:3:6",
                    "statements": []
                  },
                  "src": "15391:194:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15594:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "15601:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15594:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_payable_dyn_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15161:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15168:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15176:3:6",
                "type": ""
              }
            ],
            "src": "15107:503:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15689:46:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15699:30:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "slot_value",
                        "nodeType": "YulIdentifier",
                        "src": "15712:10:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15724:4:6",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15708:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15708:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "15699:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "extract_from_storage_value_offsett_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot_value",
                "nodeType": "YulTypedName",
                "src": "15664:10:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15679:5:6",
                "type": ""
              }
            ],
            "src": "15615:120:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15798:1026:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15808:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15831:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "15825:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15825:12:6"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "15812:9:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15846:15:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15860:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15850:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15870:11:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15880:1:6",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15874:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15890:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15904:2:6"
                      },
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "15908:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "15900:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15900:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "15890:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15927:44:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "15957:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15968:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15953:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15953:18:6"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "15931:18:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16010:31:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16012:27:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "16026:6:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16034:4:6",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "16022:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16022:17:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "16012:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "15990:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15983:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15983:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "15980:61:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16050:12:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16060:2:6",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "16054:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16121:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16142:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16149:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16154:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "16145:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16145:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16135:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16135:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16135:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16186:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16189:4:6",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16179:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16179:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16179:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16214:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16217:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16207:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16207:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16207:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "16077:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "16100:6:6"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "16108:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "16097:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16097:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "16074:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16074:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "16071:161:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16241:84:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16313:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16318:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_array_struct_NotesService_dyn",
                      "nodeType": "YulIdentifier",
                      "src": "16254:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16254:71:6"
                  },
                  "variables": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulTypedName",
                      "src": "16245:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16375:97:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "16396:5:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "16407:9:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16422:3:6",
                                          "type": "",
                                          "value": "255"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "16418:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16418:8:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "16403:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16403:24:6"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "16389:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16389:39:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "16389:39:6"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "16441:21:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "16452:5:6"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "16459:2:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16448:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16448:14:6"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "16441:3:6"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16368:104:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16373:1:6",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16488:330:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "16502:70:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "16566:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_array_address_payable_dyn_storage",
                                "nodeType": "YulIdentifier",
                                "src": "16517:48:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16517:55:6"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "16506:7:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "16585:10:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16594:1:6",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "16589:1:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "16662:113:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "16691:5:6"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "16698:1:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16687:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16687:13:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "16708:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "16702:5:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16702:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "16680:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16680:37:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16680:37:6"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16734:27:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "16749:7:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "16758:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16745:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16745:16:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "16734:7:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "16619:1:6"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16622:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "16616:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16616:13:6"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "16630:19:6",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16632:15:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "16641:1:6"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "16644:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16637:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16637:10:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "16632:1:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "16612:3:6",
                              "statements": []
                            },
                            "src": "16608:167:6"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "16788:20:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "16799:5:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "16806:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16795:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16795:13:6"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "16788:3:6"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16481:337:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16486:1:6",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "name": "outOfPlaceEncoding",
                    "nodeType": "YulIdentifier",
                    "src": "16341:18:6"
                  },
                  "nodeType": "YulSwitch",
                  "src": "16334:484:6"
                }
              ]
            },
            "name": "abi_encode_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15775:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15782:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "15790:3:6",
                "type": ""
              }
            ],
            "src": "15740:1084:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16893:865:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16903:16:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16913:6:6",
                    "type": "",
                    "value": "0x0100"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16907:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16935:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16946:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "16940:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16940:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16928:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16928:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16928:25:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16973:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16978:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16969:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16969:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16995:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17002:4:6",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16991:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16991:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "16985:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16985:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16962:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16962:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16962:47:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17018:95:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17099:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17106:4:6",
                                "type": "",
                                "value": "0x02"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17095:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17095:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "17089:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17089:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "extract_from_storage_value_offsett_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "17038:50:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17038:75:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "17022:12:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "17149:12:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17167:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17172:4:6",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17163:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17163:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "17122:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17122:56:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17122:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17198:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17203:4:6",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17194:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17194:14:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17210:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17187:26:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17187:26:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17222:88:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17283:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17290:4:6",
                            "type": "",
                            "value": "0x03"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17279:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17279:16:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17301:3:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17306:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17297:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17297:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_payable_dyn_storage",
                      "nodeType": "YulIdentifier",
                      "src": "17234:44:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17234:76:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "17226:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17319:86:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17391:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17398:4:6",
                                "type": "",
                                "value": "0x04"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17387:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17387:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "17381:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17381:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "extract_from_storage_value_offsett_bool",
                      "nodeType": "YulIdentifier",
                      "src": "17341:39:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17341:64:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "17323:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "17430:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17450:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17455:4:6",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17446:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17446:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "17414:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17414:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17414:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17481:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17486:4:6",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17477:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17477:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17503:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17510:4:6",
                                "type": "",
                                "value": "0x05"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17499:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17499:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "17493:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17493:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17470:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17470:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17470:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17537:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17542:4:6",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17533:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17533:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17553:4:6"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17559:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17549:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17549:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17526:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17526:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17526:38:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17573:63:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17617:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17624:4:6",
                            "type": "",
                            "value": "0x06"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17613:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17613:16:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17631:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "17587:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17587:49:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "17577:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17656:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17661:4:6",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17652:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17652:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "17672:6:6"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17680:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17668:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17668:16:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17645:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17645:40:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17645:40:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17694:58:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17731:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17738:4:6",
                            "type": "",
                            "value": "0x07"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17727:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17727:16:6"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "17745:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "17701:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17701:51:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17694:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_Notes_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16870:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16877:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16885:3:6",
                "type": ""
              }
            ],
            "src": "16829:929:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17923:1056:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17940:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17951:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17933:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17933:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17933:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17974:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17985:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17970:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17970:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17996:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "17990:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17990:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17963:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17963:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17963:41:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18013:16:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "18023:6:6",
                    "type": "",
                    "value": "0x0100"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18017:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18049:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18060:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18045:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18045:18:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "18065:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18038:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18038:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18038:30:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18077:85:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18127:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18135:4:6",
                            "type": "",
                            "value": "0x01"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18123:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18123:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18146:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18157:3:6",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18142:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18142:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Notes_storage",
                      "nodeType": "YulIdentifier",
                      "src": "18091:31:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18091:71:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "18081:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18171:85:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18241:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18249:4:6",
                                "type": "",
                                "value": "0x09"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18237:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18237:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "18231:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18231:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "extract_from_storage_value_offsett_bool",
                      "nodeType": "YulIdentifier",
                      "src": "18191:39:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18191:65:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "18175:12:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "18287:12:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18305:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18316:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18301:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18301:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_State",
                      "nodeType": "YulIdentifier",
                      "src": "18265:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18265:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18265:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18340:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18351:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18336:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18336:19:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18367:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18375:4:6",
                                "type": "",
                                "value": "0x0a"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18363:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18363:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "18357:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18357:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18329:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18329:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18329:53:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18391:98:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18474:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18482:4:6",
                                "type": "",
                                "value": "0x0b"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18470:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18470:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "18464:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18464:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "extract_from_storage_value_offsett_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "18413:50:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18413:76:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "18395:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "18525:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18545:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18556:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18541:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18541:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "18498:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18498:63:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18498:63:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18570:98:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18653:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18661:4:6",
                                "type": "",
                                "value": "0x0c"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18649:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18649:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "18643:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18643:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "extract_from_storage_value_offsett_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "18592:50:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18592:76:6"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "18574:14:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "18704:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18724:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18735:3:6",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18720:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18720:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "18677:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18677:63:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18677:63:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18760:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18771:3:6",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18756:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18756:19:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "18785:6:6"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18793:9:6"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "18781:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18781:22:6"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18809:2:6",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "18805:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18805:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18777:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18777:36:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18749:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18749:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18749:65:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18823:66:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18867:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18875:4:6",
                            "type": "",
                            "value": "0x0d"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18863:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18863:17:6"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "18882:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "18837:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18837:52:6"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "18827:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18909:9:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18920:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18905:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18905:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18935:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18943:4:6",
                                "type": "",
                                "value": "0x0e"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18931:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18931:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "18925:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18925:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18898:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18898:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18898:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18959:14:6",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "18967:6:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18959:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_NotesService_$142_storage_ptr__to_t_struct$_NotesService_$142_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17892:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17903:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17914:4:6",
                "type": ""
              }
            ],
            "src": "17763:1216:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19016:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19033:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19040:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19045:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "19036:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19036:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19026:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19026:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19026:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19073:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19076:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19066:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19066:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19066:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19097:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19100:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19090:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19090:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19090:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "18984:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19163:88:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19194:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19196:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19196:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19196:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19179:5:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19190:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "19186:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19186:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "19176:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19176:17:6"
                  },
                  "nodeType": "YulIf",
                  "src": "19173:43:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19225:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19236:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19243:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19232:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19232:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "19225:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19145:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "19155:3:6",
                "type": ""
              }
            ],
            "src": "19116:135:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19430:176:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19447:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19458:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19440:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19440:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19440:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19481:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19492:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19477:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19477:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19497:2:6",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19470:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19470:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19470:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19520:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19531:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19516:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19516:18:6"
                      },
                      {
                        "hexValue": "546865206e6f74657320617265206e6f7420666f722073616c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19536:28:6",
                        "type": "",
                        "value": "The notes are not for sale"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19509:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19509:56:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19509:56:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19574:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19586:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19597:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19582:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19582:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19574:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ad1ae08294ed2d36a63be916ba6e63ac1b851cb201fe8a13f96fa395210e84f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19407:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19421:4:6",
                "type": ""
              }
            ],
            "src": "19256:350:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19785:223:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19802:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19813:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19795:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19795:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19795:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19836:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19847:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19832:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19832:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19852:2:6",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19825:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19825:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19825:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19875:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19886:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19871:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19871:18:6"
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e657920746f2062757920746865206e6f7465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19891:34:6",
                        "type": "",
                        "value": "Not enough money to buy the note"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19864:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19864:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19864:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19946:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19957:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19942:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19942:18:6"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19962:3:6",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19935:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19935:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19935:31:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19975:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19987:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19998:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19983:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19983:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19975:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b4bd699b3111cf560520059ce70af0379069b72e8a7babaf37e0ad9829fe8484__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19762:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19776:4:6",
                "type": ""
              }
            ],
            "src": "19611:397:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20062:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20084:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20086:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20086:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20086:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20078:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20081:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20075:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20075:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "20072:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20115:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20127:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20130:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20123:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20123:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20115:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20044:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20047:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20053:4:6",
                "type": ""
              }
            ],
            "src": "20013:125:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20325:182:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20342:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20353:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20335:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20335:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20335:21:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20365:67:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20405:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20417:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20428:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20413:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20413:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Notes_storage",
                      "nodeType": "YulIdentifier",
                      "src": "20373:31:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20373:59:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20365:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20452:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20463:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20448:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20448:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20472:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20488:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20493:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "20484:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20484:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20497:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "20480:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20480:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20468:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20468:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20441:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20441:60:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20441:60:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Notes_$123_storage_ptr_t_address_payable__to_t_struct$_Notes_$123_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20286:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20297:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20305:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20316:4:6",
                "type": ""
              }
            ],
            "src": "20143:364:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20686:233:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20703:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20714:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20696:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20696:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20696:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20737:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20748:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20733:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20733:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20753:2:6",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20726:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20726:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20726:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20776:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20787:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20772:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20772:18:6"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206e6f74652074616b65722063616e2063616c6c20746869",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20792:34:6",
                        "type": "",
                        "value": "Only the note taker can call thi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20765:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20765:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20765:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20847:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20858:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20843:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20843:18:6"
                      },
                      {
                        "hexValue": "732066756e6374696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20863:13:6",
                        "type": "",
                        "value": "s function."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20836:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20836:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20836:41:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20886:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20898:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20909:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20894:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20894:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20886:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_966290486f98d10b55645e0db33cb6419b0d2e0c06fca9dde9ce17d3c1463265__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20663:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20677:4:6",
                "type": ""
              }
            ],
            "src": "20512:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21066:113:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21083:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21094:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21076:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21076:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21076:21:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21106:67:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21146:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21158:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21169:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21154:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21154:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Notes_storage",
                      "nodeType": "YulIdentifier",
                      "src": "21114:31:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21114:59:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21106:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Notes_$123_storage__to_t_struct$_Notes_$123_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21035:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21046:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21057:4:6",
                "type": ""
              }
            ],
            "src": "20924:255:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21358:228:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21375:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21386:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21368:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21368:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21368:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21409:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21420:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21405:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21405:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21425:2:6",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21398:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21398:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21398:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21448:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21459:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21444:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21444:18:6"
                      },
                      {
                        "hexValue": "4f6e6c79207468652072656e7465722063616e2063616c6c2074686973206675",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21464:34:6",
                        "type": "",
                        "value": "Only the renter can call this fu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21437:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21437:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21437:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21519:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21530:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21515:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21515:18:6"
                      },
                      {
                        "hexValue": "6e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21535:8:6",
                        "type": "",
                        "value": "nction"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21508:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21508:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21508:36:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21553:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21565:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21576:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21561:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21561:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21553:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21335:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21349:4:6",
                "type": ""
              }
            ],
            "src": "21184:402:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21826:429:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21836:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21856:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21850:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21850:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21840:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21898:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21906:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21894:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21894:17:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21913:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21918:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21872:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21872:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21872:53:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21934:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21951:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21956:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21947:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21947:16:6"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "21938:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21972:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21994:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21988:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21988:13:6"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "21976:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "22036:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22044:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22032:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22032:17:6"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "22051:5:6"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "22058:8:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22010:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22010:57:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22010:57:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22076:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "22093:5:6"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "22100:8:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22089:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22089:20:6"
                  },
                  "variables": [
                    {
                      "name": "end_2",
                      "nodeType": "YulTypedName",
                      "src": "22080:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22118:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "22140:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22134:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22134:13:6"
                  },
                  "variables": [
                    {
                      "name": "length_2",
                      "nodeType": "YulTypedName",
                      "src": "22122:8:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "22182:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22190:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22178:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22178:17:6"
                      },
                      {
                        "name": "end_2",
                        "nodeType": "YulIdentifier",
                        "src": "22197:5:6"
                      },
                      {
                        "name": "length_2",
                        "nodeType": "YulIdentifier",
                        "src": "22204:8:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22156:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22156:57:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22156:57:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22222:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_2",
                        "nodeType": "YulIdentifier",
                        "src": "22233:5:6"
                      },
                      {
                        "name": "length_2",
                        "nodeType": "YulIdentifier",
                        "src": "22240:8:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22229:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22229:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22222:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21786:3:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "21791:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21799:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21807:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21818:3:6",
                "type": ""
              }
            ],
            "src": "21591:664:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22306:171:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22337:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22358:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22365:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22370:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "22361:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22361:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22351:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22351:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22351:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22402:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22405:4:6",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22395:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22395:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22395:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22430:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22433:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "22423:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22423:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22423:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22326:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22319:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22319:9:6"
                  },
                  "nodeType": "YulIf",
                  "src": "22316:132:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22457:14:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22466:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22469:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "22462:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22462:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "22457:1:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22291:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22294:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "22300:1:6",
                "type": ""
              }
            ],
            "src": "22260:217:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22656:181:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22673:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22684:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22666:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22666:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22666:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22707:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22718:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22703:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22703:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22723:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22696:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22696:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22696:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22746:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22757:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22742:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22742:18:6"
                      },
                      {
                        "hexValue": "54686520646561646c696e6520686173206e6f742070617373656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22762:33:6",
                        "type": "",
                        "value": "The deadline has not passed yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22735:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22735:61:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22735:61:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22805:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22817:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22828:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22813:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22813:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22805:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47b4f6d22471987b07d980b08ede9dcc1ff24ad3c7ab893a36920a78baab32b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22633:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22647:4:6",
                "type": ""
              }
            ],
            "src": "22482:355:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22890:80:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22917:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22919:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22919:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22919:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22906:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22913:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22909:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22909:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22903:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22903:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "22900:39:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22948:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22959:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22962:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22955:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22955:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "22948:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22873:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22876:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "22882:3:6",
                "type": ""
              }
            ],
            "src": "22842:128:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3133() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0100)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_address_payable(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_address_payable_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_struct$_Notes_$123_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0100) { revert(0, 0) }\n        let value_1 := allocate_memory_3133()\n        mstore(value_1, calldataload(_2))\n        mstore(add(value_1, 32), calldataload(add(_2, 32)))\n        mstore(add(value_1, 64), abi_decode_address_payable(add(_2, 64)))\n        let offset_1 := calldataload(add(_2, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value_1, 96), abi_decode_array_address_payable_dyn(add(_2, offset_1), dataEnd))\n        mstore(add(value_1, 128), abi_decode_bool(add(_2, 128)))\n        mstore(add(value_1, 160), calldataload(add(_2, 160)))\n        let offset_2 := calldataload(add(_2, 192))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value_1, 192), abi_decode_string(add(_2, offset_2), dataEnd))\n        let offset_3 := calldataload(add(_2, 224))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value_1, 224), abi_decode_string(add(_2, offset_3), dataEnd))\n        value1 := value_1\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function array_storeLengthForEncoding_array_struct_NotesService_dyn(pos, length) -> updated_pos\n    {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n    function abi_encode_address_payable(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_array_address_payable_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_struct_Notes(value, pos) -> end\n    {\n        let _1 := 0x0100\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value, 0x60))\n        mstore(add(pos, 0x60), _1)\n        let tail := abi_encode_array_address_payable_dyn(memberValue0, add(pos, _1))\n        let memberValue0_1 := mload(add(value, 0x80))\n        abi_encode_bool(memberValue0_1, add(pos, 0x80))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        let memberValue0_2 := mload(add(value, 0xc0))\n        mstore(add(pos, 0xc0), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_2, tail)\n        let memberValue0_3 := mload(add(value, 0xe0))\n        mstore(add(pos, 0xe0), sub(tail_1, pos))\n        end := abi_encode_string(memberValue0_3, tail_1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_State(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_struct_NotesService(value, pos) -> end\n    {\n        let _1 := 0x0100\n        mstore(pos, mload(value))\n        let memberValue0 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), _1)\n        let tail := abi_encode_struct_Notes(memberValue0, add(pos, _1))\n        let memberValue0_1 := mload(add(value, 0x40))\n        abi_encode_enum_State(memberValue0_1, add(pos, 0x40))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        let memberValue0_2 := mload(add(value, 0x80))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(pos, 0x80), and(memberValue0_2, _2))\n        mstore(add(pos, 0xa0), and(mload(add(value, 0xa0)), _2))\n        let memberValue0_3 := mload(add(value, 0xc0))\n        mstore(add(pos, 0xc0), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_3, tail)\n        mstore(add(pos, 0xe0), mload(add(value, 0xe0)))\n        end := tail_1\n    }\n    function abi_encode_tuple_t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_NotesService(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_Notes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_struct$_Notes_$123_memory_ptr__to_t_struct$_Notes_$123_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_Notes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_struct$_NotesService_$142_memory_ptr__to_t_struct$_NotesService_$142_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_NotesService(value0, add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid state\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49091f334568c08e875585d9b524a983df59d6e6f811785144fa57f178979b20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Only the fulfiller can call this\")\n        mstore(add(headStart, 96), \" function\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f3184ef53a77d590f584cb63c29342c2b3d2451cccb94717b4deaa3f4bc80155__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"The deadline has passed\")\n        tail := add(headStart, 96)\n    }\n    function extract_from_storage_value_offsett_address_payable(slot_value) -> value\n    {\n        value := and(slot_value, sub(shl(160, 1), 1))\n    }\n    function array_dataslot_array_address_payable_dyn_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_array_address_payable_dyn_storage(value, pos) -> end\n    {\n        let length := sload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        mstore(0, value)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, 1)\n        }\n        end := pos\n    }\n    function extract_from_storage_value_offsett_bool(slot_value) -> value\n    {\n        value := and(slot_value, 0xff)\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := 0\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n        let pos_1 := array_storeLengthForEncoding_array_struct_NotesService_dyn(pos, length)\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos_1, and(slotValue, not(255)))\n            ret := add(pos_1, _2)\n        }\n        case 1 {\n            let dataPos := array_dataslot_array_address_payable_dyn_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos_1, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos_1, i)\n        }\n    }\n    function abi_encode_struct_Notes_storage(value, pos) -> end\n    {\n        let _1 := 0x0100\n        mstore(pos, sload(value))\n        mstore(add(pos, 0x20), sload(add(value, 0x01)))\n        let memberValue0 := extract_from_storage_value_offsett_address_payable(sload(add(value, 0x02)))\n        abi_encode_address_payable(memberValue0, add(pos, 0x40))\n        mstore(add(pos, 0x60), _1)\n        let tail := abi_encode_array_address_payable_dyn_storage(add(value, 0x03), add(pos, _1))\n        let memberValue0_1 := extract_from_storage_value_offsett_bool(sload(add(value, 0x04)))\n        abi_encode_bool(memberValue0_1, add(pos, 0x80))\n        mstore(add(pos, 0xa0), sload(add(value, 0x05)))\n        mstore(add(pos, 0xc0), sub(tail, pos))\n        let tail_1 := abi_encode_string_storage(add(value, 0x06), tail)\n        mstore(add(pos, 0xe0), sub(tail_1, pos))\n        end := abi_encode_string_storage(add(value, 0x07), tail_1)\n    }\n    function abi_encode_tuple_t_struct$_NotesService_$142_storage_ptr__to_t_struct$_NotesService_$142_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), sload(value0))\n        let _1 := 0x0100\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_struct_Notes_storage(add(value0, 0x01), add(headStart, 288))\n        let memberValue0 := extract_from_storage_value_offsett_bool(sload(add(value0, 0x09)))\n        abi_encode_enum_State(memberValue0, add(headStart, 96))\n        mstore(add(headStart, 128), sload(add(value0, 0x0a)))\n        let memberValue0_1 := extract_from_storage_value_offsett_address_payable(sload(add(value0, 0x0b)))\n        abi_encode_address_payable(memberValue0_1, add(headStart, 160))\n        let memberValue0_2 := extract_from_storage_value_offsett_address_payable(sload(add(value0, 0x0c)))\n        abi_encode_address_payable(memberValue0_2, add(headStart, 192))\n        mstore(add(headStart, 224), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string_storage(add(value0, 0x0d), tail_1)\n        mstore(add(headStart, _1), sload(add(value0, 0x0e)))\n        tail := tail_2\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_0ad1ae08294ed2d36a63be916ba6e63ac1b851cb201fe8a13f96fa395210e84f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"The notes are not for sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4bd699b3111cf560520059ce70af0379069b72e8a7babaf37e0ad9829fe8484__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Not enough money to buy the note\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_struct$_Notes_$123_storage_ptr_t_address_payable__to_t_struct$_Notes_$123_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_struct_Notes_storage(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_966290486f98d10b55645e0db33cb6419b0d2e0c06fca9dde9ce17d3c1463265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Only the note taker can call thi\")\n        mstore(add(headStart, 96), \"s function.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_Notes_$123_storage__to_t_struct$_Notes_$123_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_Notes_storage(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only the renter can call this fu\")\n        mstore(add(headStart, 96), \"nction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let length_2 := mload(value2)\n        copy_memory_to_memory(add(value2, 0x20), end_2, length_2)\n        end := add(end_2, length_2)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_47b4f6d22471987b07d980b08ede9dcc1ff24ad3c7ab893a36920a78baab32b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"The deadline has not passed yet\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "132:17571:2:-:0;;;516:1;482:35;;600:1;564:37;;4427:108;;;;;;;;;-1:-1:-1;4500:5:2;:27;;-1:-1:-1;;;;;;4500:27:2;4516:10;4500:27;;;132:17571;;;;;;",
  "deployedSourceMap": "132:17571:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8140:578;;;;;;;;;;-1:-1:-1;8140:578:2;;;;;:::i;:::-;;:::i;:::-;;14215:99;;;;;;;;;;-1:-1:-1;14285:21:2;14215:99;;;616:25:6;;;604:2;589:18;14215:99:2;;;;;;;;4746:300;;;;;;;;;;-1:-1:-1;4746:300:2;;;;;:::i;:::-;;:::i;:::-;;;4681:14:6;;4674:22;4656:41;;4644:2;4629:18;4746:300:2;4516:187:6;16491:298:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5113:688::-;;;;;;:::i;:::-;;:::i;6794:224::-;;;;;;;;;;-1:-1:-1;6794:224:2;;;;;:::i;:::-;;:::i;14386:529::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10230:605::-;;;;;;;;;;-1:-1:-1;10230:605:2;;;;;:::i;:::-;;:::i;17346:101::-;;;;;;;;;;-1:-1:-1;17422:17:2;;17346:101;;5866:920;;;;;;:::i;:::-;;:::i;7333:701::-;;;;;;:::i;:::-;;:::i;16835:96::-;;;;;;;;;;-1:-1:-1;16908:15:2;;16835:96;;14974:596;;;;;;;;;;;;;:::i;162:28::-;;;;;;;;;;-1:-1:-1;162:28:2;;;;-1:-1:-1;;;;;162:28:2;;;;;;-1:-1:-1;;;;;11626:32:6;;;11608:51;;11596:2;11581:18;162:28:2;11446:219:6;7026:227:2;;;;;;;;;;-1:-1:-1;7026:227:2;;;;;:::i;:::-;;:::i;16973:327::-;;;;;;;;;;-1:-1:-1;16973:327:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8824:530::-;;;;;;;;;;-1:-1:-1;8824:530:2;;;;;:::i;:::-;;:::i;9362:762::-;;;;;;;;;;-1:-1:-1;9362:762:2;;;;;:::i;:::-;;:::i;13425:742::-;;;;;;;;;;-1:-1:-1;13425:742:2;;;;;:::i;:::-;;:::i;12127:1290::-;;;;;;:::i;:::-;;:::i;16187:271::-;;;;;;;;;;;;;:::i;15646:511::-;;;;;;;;;;;;;:::i;17489:211::-;;;;;;;;;;-1:-1:-1;17489:211:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4571:109::-;;;;;;;;;;-1:-1:-1;4571:109:2;;;;;:::i;:::-;;:::i;8140:578::-;8273:22;;;;:11;:22;;;;;;;;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8273:22;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;-1:-1:-1;;4340:7:2;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;;;;;;;;;8335:22:::1;::::0;;;:11:::1;:22;::::0;;;;;;;;3949:214;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;3949:214:2::1;::::0;;;;;;;;;;;;;::::1;::::0;;;;;;;;;;;;8335:22;;3949:214;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;3949:214:2::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;-1:-1:-1::0;;;3949:214:2;;;-1:-1:-1;;3949:214:2::1;::::0;::::1;::::0;::::1;;;;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;3949:214:2;;;;-1:-1:-1;;;3949:214:2;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;3949:214:2;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;4063:10;-1:-1:-1::0;;;;;4034:40:2::1;:7;:17;;;-1:-1:-1::0;;;;;4034:40:2::1;;4012:131;;;;-1:-1:-1::0;;;4012:131:2::1;;;;;;;:::i;:::-;8375:28:::2;8406:22:::0;;;:11:::2;:22;::::0;;;;8481::::2;:15;8499:4;8481:22;:::i;:::-;8461:7;:16;;;:43;8439:169;;;::::0;-1:-1:-1;;;8439:169:2;;14661:2:6;8439:169:2::2;::::0;::::2;14643:21:6::0;14700:2;14680:18;;;14673:30;-1:-1:-1;;;14719:18:6;;;14712:53;14782:18;;8439:169:2::2;14459:347:6::0;8439:169:2::2;8621:17;::::0;::::2;:41:::0;;-1:-1:-1;;;;;;8621:41:2::2;-1:-1:-1::0;;;;;8621:41:2;::::2;;::::0;;8680:30:::2;::::0;::::2;::::0;::::2;::::0;8621:17;;8680:30:::2;:::i;:::-;;;;;;;;8364:354;4410:1:::1;8140:578:::0;;;;:::o;4746:300::-;4843:4;;4865:151;4889:4;:11;;;:18;4885:1;:22;4865:151;;;4951:6;-1:-1:-1;;;;;4933:24:2;:4;:11;;;4945:1;4933:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4933:24:2;;4929:76;;;4985:4;4978:11;;;;;4929:76;4909:3;;;;:::i;:::-;;;;4865:151;;;;5033:5;5026:12;;4746:300;;;;;:::o;16491:298::-;16538:21;16572:30;16624:17;;-1:-1:-1;;;;;16605:37:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16572:70;;16658:9;16653:103;16677:17;;16673:1;:21;16653:103;;;16730:14;;;;:11;:14;;;;;;;;;16716:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16716:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;16730:14;;16716:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16716:28:2;;;;;;;;;;;;;;;;-1:-1:-1;;;16716:28:2;;;-1:-1:-1;;16716:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16716:28:2;;;;-1:-1:-1;;;16716:28:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;16716:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;16725:1;16716:11;;;;;;;;:::i;:::-;;;;;;:28;;;;16696:3;;;;;:::i;:::-;;;;16653:103;;;-1:-1:-1;16773:8:2;16491:298;-1:-1:-1;16491:298:2:o;5113:688::-;5174:19;5196:21;;;:12;:21;;;;;5236:12;;;;;;5228:51;;;;-1:-1:-1;;;5228:51:2;;19458:2:6;5228:51:2;;;19440:21:6;19497:2;19477:18;;;19470:30;-1:-1:-1;;;19516:18:6;;;19509:56;19582:18;;5228:51:2;19256:350:6;5228:51:2;5325:5;:16;;;5312:9;:29;;5290:112;;;;-1:-1:-1;;;5290:112:2;;19813:2:6;5290:112:2;;;19795:21:6;19852:2;19832:18;;;19825:30;19891:34;19871:18;;;19864:62;-1:-1:-1;;;19942:18:6;;;19935:31;19983:19;;5290:112:2;19611:397:6;5290:112:2;5470:12;;;:25;;;;;;;;5415:22;5470:25;;;;;;;;;;;-1:-1:-1;;;;;;5470:25:2;5448:10;5470:25;;;;;;5598:15;;;;5624:16;;;;5590:51;;5448:10;;-1:-1:-1;;;;;5598:15:2;;;;;5590:51;;;;;;;5415:22;5590:51;5624:16;5598:15;5590:51;;;;;;;;;;;;;;;;;;;;;5652:6;-1:-1:-1;;;;;5652:15:2;:45;5680:5;:16;;;5668:9;:28;;;;:::i;:::-;5652:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5769:24;5779:5;5786:6;5769:24;;;;;;;:::i;:::-;;;;;;;;5163:638;;5113:688;:::o;6794:224::-;6878:21;;;;:12;:21;;;;;;;;;3418:203;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3418:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;6878:21;;3418:203;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3418:203:2;;;;;;;;;;;;;;;;-1:-1:-1;;;3418:203:2;;;-1:-1:-1;;3418:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:4;:14;;;-1:-1:-1;;;;;3493:37:2;3501:10;-1:-1:-1;;;;;3493:37:2;;3471:130;;;;-1:-1:-1;;;3471:130:2;;;;;;;:::i;:::-;6917:21:::1;::::0;;;6948:4:::1;6917:21;::::0;;;;;;;;:28:::1;::::0;::::1;:35:::0;;-1:-1:-1;;6917:35:2::1;::::0;;::::1;::::0;;;6968:42;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;6794:224:::0;;:::o;14386:529::-;14436:14;14592:26;14633:15;;-1:-1:-1;;;;;14621:28:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;14592:57;;14660:11;14691:9;14686:193;14710:15;;14706:1;:19;14686:193;;;14751:15;;;;:12;:15;;;;;:22;;;;;14747:121;;;14813:15;;;;:12;:15;;;;;;;;;14794:34;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14794:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;14813:15;;14794:34;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14794:34:2;;;;;;;;;;;;;;;;-1:-1:-1;;;14794:34:2;;;-1:-1:-1;;14794:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;14806:3;14794:16;;;;;;;;:::i;:::-;;;;;;:34;;;;14847:5;;;;;:::i;:::-;;;;14747:121;14727:3;;;;:::i;:::-;;;;14686:193;;;-1:-1:-1;14896:11:2;;14386:529;-1:-1:-1;;14386:529:2:o;10230:605::-;10288:28;10319:22;;;:11;:22;;;;;10374:14;;;;-1:-1:-1;;;;;10374:14:2;10400:10;10374:37;10352:125;;;;-1:-1:-1;;;10352:125:2;;;;;;;:::i;:::-;10522:13;10494:24;;;;;;:41;;;;;;;;:::i;:::-;;10490:338;;;10552:34;10578:7;10552:25;:34::i;:::-;10277:558;10230:605;:::o;10490:338::-;10636:24;10608;;;;;;:52;;;;;;;;:::i;:::-;;10604:224;;;10677:31;10700:7;10677:22;:31::i;5866:920::-;6051:17;6071:19;6085:4;6071:13;:19::i;:::-;6051:39;;6101:17;6162:5;6169:11;6182:3;6145:41;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6121:76;;;;;;6101:96;;6252:21;;:::i;:::-;6302:4;6284:15;;;:22;6317:19;;;:32;;;6389:10;6360:18;;;:40;6284:22;6429:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6429:24:2;-1:-1:-1;6411:15:2;;;:42;;;6478:15;;;6464:29;;;6504:18;;;:30;;;6545:14;;;:22;;;6578:20;;;:34;;;-1:-1:-1;6672:25:2;;;:12;:25;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6672:36:2;-1:-1:-1;;;;;6672:36:2;;;;;;;;;;;;;6411:15;;6672:25;:36;;;;;;;;;:::i;:::-;-1:-1:-1;6672:36:2;;;;;;;;;-1:-1:-1;;6672:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6672:36:2;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6719:15:2;:17;;;-1:-1:-1;6719:15:2;:17;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;6769:8:2;6754:24;;;;;;:::i;:::-;;;;;;;;6040:746;;;5866:920;;;;:::o;7333:701::-;7523:27;;:::i;:::-;7561:16;;;:27;;;-1:-1:-1;;;;;7599:38:2;;:17;;;:38;7673:9;7648:22;;;:34;7718:10;-1:-1:-1;7693:14:2;;:36;-1:-1:-1;;7740:24:2;;-1:-1:-1;7740:40:2;;-1:-1:-1;7804:17:2;;;7791:30;;;7832:15;;;:25;;;-1:-1:-1;7917:23:2;;;:11;:23;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7917:33:2;-1:-1:-1;;;;;7917:33:2;;;;;;;;;;;;;;;7791:30;;7917:23;;:33;;;;;;;;;;:::i;:::-;-1:-1:-1;7917:33:2;;;;;;;;;-1:-1:-1;;7917:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7917:33:2;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;7917:33:2;;;;;;;;;-1:-1:-1;;7917:33:2;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7917:33:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7917:33:2;;;-1:-1:-1;;;;;;7917:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7917:33:2;;;;;;;;;;;7961:17;:19;;;:17;:19;;;:::i;:::-;;;;;;7998:28;8018:7;7998:28;;;;;;:::i;:::-;;;;;;;;7470:564;7333:701;;;:::o;14974:596::-;15017:14;15044:20;15084:9;15079:160;15103:15;;15099:1;:19;15079:160;;;15161:15;;;;:12;:15;;;;;;;;;15144:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15144:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;15149:10;;15144:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15144:33:2;;;;;;;;;;;;;;;;-1:-1:-1;;;15144:33:2;;;-1:-1:-1;;15144:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;:33::i;:::-;15140:88;;;15198:14;;;;:::i;:::-;;;;15140:88;15120:3;;;;:::i;:::-;;;;15079:160;;;;15251:22;15288:12;-1:-1:-1;;;;;15276:25:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15251:50;;15312:11;15343:9;15338:200;15362:15;;15358:1;:19;15338:200;;;15420:15;;;;:12;:15;;;;;;;;;15403:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15403:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;15408:10;;15403:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15403:33:2;;;;;;;;;;;;;;;-1:-1:-1;;;15403:33:2;;;-1:-1:-1;;15403:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15399:128;;;15472:15;;;;:12;:15;;;;;;;;;15457:30;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15457:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;15472:15;;15457:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15457:30:2;;;;;;;;;;;;;;;;-1:-1:-1;;;15457:30:2;;;-1:-1:-1;;15457:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;15465:3;15457:12;;;;;;;;:::i;:::-;;;;;;:30;;;;15506:5;;;;;:::i;:::-;;;;15399:128;15379:3;;;;:::i;:::-;;;;15338:200;;;-1:-1:-1;15555:7:2;;14974:596;-1:-1:-1;;;14974:596:2:o;7026:227::-;7111:21;;;;:12;:21;;;;;;;;;3418:203;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3418:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7111:21;;3418:203;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3418:203:2;;;;;;;;;;;;;;;;-1:-1:-1;;;3418:203:2;;;-1:-1:-1;;3418:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:4;:14;;;-1:-1:-1;;;;;3493:37:2;3501:10;-1:-1:-1;;;;;3493:37:2;;3471:130;;;;-1:-1:-1;;;3471:130:2;;;;;;;:::i;:::-;7181:5:::1;7150:21:::0;;;:12:::1;:21;::::0;;;;;;:28:::1;::::0;::::1;:36:::0;;-1:-1:-1;;7150:36:2::1;::::0;;7202:43;;::::1;::::0;::::1;::::0;::::1;:::i;16973:327::-:0;17028:12;;:::i;:::-;17053:18;17074:21;;;:12;:21;;;;;;;;17053:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17053:42:2;;;;;;;;;;;;;;;;;;;;;;;;;17074:21;;17053:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17053:42:2;;;;;;;;;;;;;;;;-1:-1:-1;;;17053:42:2;;;-1:-1:-1;;17053:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17106:23;17169:9;17164:104;17188:5;:12;;;:19;17184:1;:23;17164:104;;;17241:5;:12;;;17254:1;17241:15;;;;;;;;:::i;:::-;;;;;;;17229:6;17236:1;17229:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17229:27:2;;;:9;;;;;;;;;;;:27;17209:3;;;;:::i;:::-;;;;17164:104;;8824:530;8899:22;;;;:11;:22;;;;;;;;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;8899:22;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;-1:-1:-1;;4340:7:2;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;8961:22:::1;::::0;;;:11:::1;:22;::::0;;;;;;;;3949:214;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;3949:214:2::1;::::0;;;;;;;;;;;;;::::1;::::0;;;;;;;;;;;;8961:22;;3949:214;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;3949:214:2::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;-1:-1:-1::0;;;3949:214:2;;;-1:-1:-1;;3949:214:2::1;::::0;::::1;::::0;::::1;;;;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;3949:214:2;;;;-1:-1:-1;;;3949:214:2;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;3949:214:2;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;4063:10;-1:-1:-1::0;;;;;4034:40:2::1;:7;:17;;;-1:-1:-1::0;;;;;4034:40:2::1;;4012:131;;;;-1:-1:-1::0;;;4012:131:2::1;;;;;;;:::i;:::-;9001:28:::2;9032:22:::0;;;:11:::2;:22;::::0;;;;;9158:24:::2;::::0;::::2;:40:::0;;-1:-1:-1;;9158:40:2::2;9185:13;9158:40;::::0;;9211:14:::2;::::0;::::2;::::0;9235:22:::2;::::0;::::2;::::0;9211:47;;9032:22;;-1:-1:-1;;;;;9211:14:2;;::::2;::::0;:47:::2;::::0;::::2;;::::0;9235:22;;9211:47;9001:28;9211:47;9235:22;9211:14;:47;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;-1:-1:-1::0;;;;;;;;;;;9338:7:2::2;9318:28;;;;;;:::i;:::-;;;;;;;;8990:364;4410:1:::1;8824:530:::0;;;:::o;9362:762::-;9446:22;;;;:11;:22;;;;;;;;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;9446:22;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;-1:-1:-1;;4340:7:2;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;9501:28:::1;9532:22:::0;;;:11:::1;:22;::::0;;;;9587:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;9587:14:2::1;9613:10;9587:37;9565:125;;;;-1:-1:-1::0;;;9565:125:2::1;;;;;;;:::i;:::-;9792:24;::::0;::::1;:40:::0;;-1:-1:-1;;9792:40:2::1;9819:13;9792:40:::0;;::::1;::::0;;;9845:14:::1;::::0;::::1;::::0;9870:22:::1;::::0;::::1;::::0;-1:-1:-1;;;;;9845:14:2;;::::1;::::0;:57:::1;::::0;9900:1:::1;::::0;9870:26:::1;::::0;:22;:26:::1;:::i;:::-;9869:32;;;;:::i;:::-;9845:57;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;9962:17:2::1;::::0;::::1;::::0;9990:22:::1;::::0;::::1;::::0;-1:-1:-1;;;;;9962:17:2;;::::1;::::0;:56:::1;::::0;9989:28:::1;::::0;10016:1:::1;::::0;9989:28:::1;:::i;:::-;9962:56;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;-1:-1:-1::0;;;;;;;;;;;10108:7:2::1;10088:28;;;;;;:::i;13425:742::-:0;13505:22;;;;:11;:22;;;;;;;;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;13505:22;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;13529:24;;4340:7;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;13571:28:::1;13602:22:::0;;;:11:::1;:22;::::0;;;;13657:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13657:14:2::1;13683:10;13657:37;13635:125;;;;-1:-1:-1::0;;;13635:125:2::1;;;;;;;:::i;:::-;13864:24;::::0;::::1;:42:::0;;-1:-1:-1;;13864:42:2::1;13891:15;13864:42;::::0;;13919:17:::1;::::0;::::1;::::0;13946:22:::1;::::0;::::1;::::0;13919:50:::1;::::0;-1:-1:-1;;;;;13919:17:2;;::::1;::::0;:50:::1;::::0;::::1;;::::0;13946:22;-1:-1:-1;13919:50:2;-1:-1:-1;13919:50:2;13946:22;13919:17;:50;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;14049:14:2::1;::::0;::::1;::::0;14023:20;;;:41;;:13:::1;:41:::0;::::1;::::0;;14049:14:::1;14023:41:::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;14023:41:2::1;-1:-1:-1::0;;;;;14049:14:2;;::::1;14023:41:::0;;;::::1;::::0;;14129:30:::1;::::0;::::1;::::0;::::1;::::0;14023:7;;14129:30:::1;:::i;12127:1290::-:0;12335:22;;;;:11;:22;;;;;;;;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;12335:22;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;-1:-1:-1;;4340:7:2;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;12397:22:::1;::::0;;;:11:::1;:22;::::0;;;;;;;;3949:214;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;3949:214:2::1;::::0;;;;;;;;;;;;;::::1;::::0;;;;;;;;;;;;12397:22;;3949:214;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;3949:214:2::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;-1:-1:-1::0;;;3949:214:2;;;-1:-1:-1;;3949:214:2::1;::::0;::::1;::::0;::::1;;;;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;3949:214:2;;;;-1:-1:-1;;;3949:214:2;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;3949:214:2;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;4063:10;-1:-1:-1::0;;;;;4034:40:2::1;:7;:17;;;-1:-1:-1::0;;;;;4034:40:2::1;;4012:131;;;;-1:-1:-1::0;;;4012:131:2::1;;;;;;;:::i;:::-;12437:28:::2;12468:22:::0;;;:11:::2;:22;::::0;;;;12503:24:::2;::::0;::::2;:51:::0;;-1:-1:-1;;12503:51:2::2;12530:24;12503:51;::::0;;12468:22;12587:19:::2;12601:4:::0;12587:13:::2;:19::i;:::-;12567:39;;12617:17;12678:5;12685:11;12698:3;12661:41;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12637:76;;;;;;12617:96;;12768:21;;:::i;:::-;12818:5;12800:15;::::0;::::2;:23:::0;12865:22:::2;::::0;::::2;::::0;12856:32:::2;::::0;:8:::2;:32::i;:::-;12834:19;::::0;::::2;:54:::0;12928:10:::2;12899:18;::::0;::::2;:40:::0;-1:-1:-1;12968:24:2::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12968:24:2::2;-1:-1:-1::0;12950:15:2::2;::::0;::::2;:42:::0;;;13017:15:::2;::::0;;13003:29;;;13043:18:::2;::::0;::::2;:30:::0;;;13084:14:::2;::::0;::::2;:22:::0;;;13117:20:::2;::::0;::::2;:34:::0;;;-1:-1:-1;13211:25:2;;;:12:::2;:25;::::0;;;;;;;;:36;;;;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;13211:36:2::2;-1:-1:-1::0;;;;;13211:36:2;;::::2;::::0;;;::::2;::::0;;;;;;12950:15;;13211:25;:36:::2;::::0;;;::::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;13211:36:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;13211:36:2::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;13211:36:2::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;13258:15:2::2;:17:::0;;;-1:-1:-1;13258:15:2::2;:17;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;13288:24:2;;:13:::2;::::0;::::2;:24:::0;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;;;;;;13288:24:2::2;-1:-1:-1::0;;;;;13288:24:2;;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;:13;:24:::2;::::0;;;;;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;13288:24:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;13288:24:2::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;13288:24:2::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;;;;;-1:-1:-1::0;;;;;;;;;;;13345:8:2::2;13330:24;;;;;;:::i;:::-;;;;;;;;13370:39;13401:7;13370:39;;;;;;:::i;:::-;;;;;;;;12426:991;;;;4410:1:::1;12127:1290:::0;;;;;;:::o;16187:271::-;16231:14;16258:23;16296:15;;-1:-1:-1;;;;;16284:28:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16258:54;;16328:9;16323:102;16347:15;;16343:1;:19;16323:102;;;16398:15;;;;:12;:15;;;;;;;;;16384:29;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16384:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;16398:15;;16384:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16384:29:2;;;;;;;;;;;;;;;;-1:-1:-1;;;16384:29:2;;;-1:-1:-1;;16384:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;16393:1;16384:11;;;;;;;;:::i;:::-;;;;;;:29;;;;16364:3;;;;;:::i;:::-;;;;16323:102;;15646:511;15782:25;;;15722:20;15782:25;;;;;;;;;15695:14;;15722:20;;;;15782:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15757:50;;15818:11;15849:9;15844:281;15868:15;;15864:1;:19;15844:281;;;15927:15;;;;:12;:15;;;;;:25;;;-1:-1:-1;;;;;15927:25:2;15956:10;15927:39;:82;;;;-1:-1:-1;15987:15:2;;;;:12;:15;;;;;:22;;;;;15927:82;15905:209;;;16059:15;;;;:12;:15;;;;;;;;;16044:30;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16044:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;16059:15;;16044:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16044:30:2;;;;;;;;;;;;;;;;-1:-1:-1;;;16044:30:2;;;-1:-1:-1;;16044:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;16052:3;16044:12;;;;;;;;:::i;:::-;;;;;;:30;;;;16093:5;;;;;:::i;:::-;;;;15905:209;15885:3;;;;:::i;:::-;;;;15844:281;;17489:211;17576:19;;:::i;:::-;17613:27;17643:22;;;:11;:22;;;;;;;;17613:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17613:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;17643:22;;17613:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17613:52:2;;;;;;;;;;;;;;;;-1:-1:-1;;;17613:52:2;;;-1:-1:-1;;17613:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17613:52:2;;;;-1:-1:-1;;;17613:52:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;17613:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17613:52:2;;;-1:-1:-1;;17613:52:2;;;;;;;;;;;;17489:211;-1:-1:-1;;;17489:211:2:o;4571:109::-;4629:7;4656:16;4668:4;4656:9;:16;:::i;10843:616::-;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;10942:7;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;-1:-1:-1;;4340:7:2;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;11024:22:::1;:15;11042:4;11024:22;:::i;:::-;11004:7;:16;;;:43;10982:177;;;::::0;-1:-1:-1;;;10982:177:2;;22684:2:6;10982:177:2::1;::::0;::::1;22666:21:6::0;22723:2;22703:18;;;22696:30;22762:33;22742:18;;;22735:61;22813:18;;10982:177:2::1;22482:355:6::0;10982:177:2::1;11263:24;::::0;::::1;:40:::0;;-1:-1:-1;;11263:40:2::1;11290:13;11263:40;::::0;;11316:14:::1;::::0;::::1;::::0;11340:22:::1;::::0;::::1;::::0;11316:47:::1;::::0;-1:-1:-1;;;;;11316:14:2;;::::1;::::0;:47:::1;::::0;::::1;;::::0;11340:22;-1:-1:-1;11316:47:2;-1:-1:-1;11316:47:2;11340:22;11316:14;:47;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;-1:-1:-1::0;;;;;;;;;;;11443:7:2::1;11423:28;;;;;;:::i;11467:558::-:0;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;11563:7;;4254:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;;-1:-1:-1;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4254:165:2;;;-1:-1:-1;;4254:165:2;;;;;;;;;;;11572:24;;4340:7;:24;;;:41;;;;;;;;:::i;:::-;;4332:67;;;;-1:-1:-1;;;4332:67:2;;;;;;;:::i;:::-;11705:24:::1;::::0;::::1;:40:::0;;-1:-1:-1;;11705:40:2::1;11732:13;11705:40;::::0;;11758:14:::1;::::0;::::1;::::0;11782:22:::1;::::0;::::1;::::0;-1:-1:-1;;;;;11758:14:2;;::::1;::::0;:51:::1;::::0;11782:26:::1;::::0;11807:1:::1;::::0;11782:26:::1;:::i;:::-;11758:51;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;11867:17:2::1;::::0;::::1;::::0;11894:22:::1;::::0;::::1;::::0;-1:-1:-1;;;;;11867:17:2;;::::1;::::0;:54:::1;::::0;11894:26:::1;::::0;11919:1:::1;::::0;11894:26:::1;:::i;:::-;11867:54;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;505:3026:0::0;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:0;;;;;;;;;-1:-1:-1;813:9:0;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:0;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:0;;505:3026;-1:-1:-1;;;;;505:3026:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:6;-1:-1:-1;;;;;89:31:6;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;652:127::-;713:10;708:3;704:20;701:1;694:31;744:4;741:1;734:15;768:4;765:1;758:15;784:255;856:2;850:9;898:6;886:19;;-1:-1:-1;;;;;920:34:6;;956:22;;;917:62;914:88;;;982:18;;:::i;:::-;1018:2;1011:22;784:255;:::o;1044:275::-;1115:2;1109:9;1180:2;1161:13;;-1:-1:-1;;1157:27:6;1145:40;;-1:-1:-1;;;;;1200:34:6;;1236:22;;;1197:62;1194:88;;;1262:18;;:::i;:::-;1298:2;1291:22;1044:275;;-1:-1:-1;1044:275:6:o;1324:142::-;1400:20;;1429:31;1400:20;1429:31;:::i;:::-;1324:142;;;:::o;1471:795::-;1533:5;1586:3;1579:4;1571:6;1567:17;1563:27;1553:55;;1604:1;1601;1594:12;1553:55;1627:20;;1666:4;-1:-1:-1;;;;;1682:26:6;;1679:52;;;1711:18;;:::i;:::-;1757:2;1754:1;1750:10;1780:28;1804:2;1800;1796:11;1780:28;:::i;:::-;1842:15;;;1912;;;1908:24;;;1873:12;;;;1944:15;;;1941:35;;;1972:1;1969;1962:12;1941:35;2008:2;2000:6;1996:15;1985:26;;2020:217;2036:6;2031:3;2028:15;2020:217;;;2116:3;2103:17;2133:31;2158:5;2133:31;:::i;:::-;2177:18;;2053:12;;;;2215;;;;2020:217;;;2255:5;1471:795;-1:-1:-1;;;;;;;1471:795:6:o;2271:160::-;2336:20;;2392:13;;2385:21;2375:32;;2365:60;;2421:1;2418;2411:12;2436:531;2479:5;2532:3;2525:4;2517:6;2513:17;2509:27;2499:55;;2550:1;2547;2540:12;2499:55;2573:20;;-1:-1:-1;;;;;2605:26:6;;2602:52;;;2634:18;;:::i;:::-;2678:55;2721:2;2702:13;;-1:-1:-1;;2698:27:6;2727:4;2694:38;2678:55;:::i;:::-;2758:2;2749:7;2742:19;2804:3;2797:4;2792:2;2784:6;2780:15;2776:26;2773:35;2770:55;;;2821:1;2818;2811:12;2770:55;2886:2;2879:4;2871:6;2867:17;2860:4;2851:7;2847:18;2834:55;2934:1;2909:16;;;2927:4;2905:27;2898:38;;;;2913:7;2436:531;-1:-1:-1;;;2436:531:6:o;2972:1443::-;3062:6;3070;3123:2;3111:9;3102:7;3098:23;3094:32;3091:52;;;3139:1;3136;3129:12;3091:52;3178:9;3165:23;3197:31;3222:5;3197:31;:::i;:::-;3247:5;-1:-1:-1;3303:2:6;3288:18;;3275:32;-1:-1:-1;;;;;3356:14:6;;;3353:34;;;3383:1;3380;3373:12;3353:34;3406:22;;;;3462:6;3444:16;;;3440:29;3437:49;;;3482:1;3479;3472:12;3437:49;3510:22;;:::i;:::-;3570:2;3557:16;3548:7;3541:33;3629:2;3625;3621:11;3608:25;3603:2;3594:7;3590:16;3583:51;3668:39;3703:2;3699;3695:11;3668:39;:::i;:::-;3663:2;3654:7;3650:16;3643:65;3754:2;3750;3746:11;3733:25;3783:2;3773:8;3770:16;3767:36;;;3799:1;3796;3789:12;3767:36;3837:64;3893:7;3882:8;3878:2;3874:17;3837:64;:::i;:::-;3832:2;3823:7;3819:16;3812:90;;3937:29;3961:3;3957:2;3953:12;3937:29;:::i;:::-;3931:3;3922:7;3918:17;3911:56;4023:3;4019:2;4015:12;4002:26;3996:3;3987:7;3983:17;3976:53;4075:3;4071:2;4067:12;4054:26;4105:2;4095:8;4092:16;4089:36;;;4121:1;4118;4111:12;4089:36;4160:45;4197:7;4186:8;4182:2;4178:17;4160:45;:::i;:::-;4154:3;4145:7;4141:17;4134:72;;4252:3;4248:2;4244:12;4231:26;4282:2;4272:8;4269:16;4266:36;;;4298:1;4295;4288:12;4266:36;4337:45;4374:7;4363:8;4359:2;4355:17;4337:45;:::i;:::-;4331:3;4322:7;4318:17;4311:72;;4402:7;4392:17;;;;;2972:1443;;;;;:::o;4886:112::-;-1:-1:-1;;;;;4960:31:6;4948:44;;4886:112::o;5003:469::-;5064:3;5102:5;5096:12;5129:6;5124:3;5117:19;5155:4;5184:2;5179:3;5175:12;5168:19;;5221:2;5214:5;5210:14;5242:1;5252:195;5266:6;5263:1;5260:13;5252:195;;;5331:13;;-1:-1:-1;;;;;5327:39:6;5315:52;;5387:12;;;;5422:15;;;;5363:1;5281:9;5252:195;;;-1:-1:-1;5463:3:6;;5003:469;-1:-1:-1;;;;;5003:469:6:o;5477:258::-;5549:1;5559:113;5573:6;5570:1;5567:13;5559:113;;;5649:11;;;5643:18;5630:11;;;5623:39;5595:2;5588:10;5559:113;;;5690:6;5687:1;5684:13;5681:48;;;5725:1;5716:6;5711:3;5707:16;5700:27;5681:48;;5477:258;;;:::o;5740:::-;5782:3;5820:5;5814:12;5847:6;5842:3;5835:19;5863:63;5919:6;5912:4;5907:3;5903:14;5896:4;5889:5;5885:16;5863:63;:::i;:::-;5980:2;5959:15;-1:-1:-1;;5955:29:6;5946:39;;;;5987:4;5942:50;;5740:258;-1:-1:-1;;5740:258:6:o;6003:921::-;6051:3;6079:6;6112:5;6106:12;6101:3;6094:25;6168:4;6161:5;6157:16;6151:23;6144:4;6139:3;6135:14;6128:47;6253:1;6249;6244:3;6240:11;6236:19;6228:4;6221:5;6217:16;6211:23;6207:49;6200:4;6195:3;6191:14;6184:73;6303:4;6296:5;6292:16;6286:23;6341:2;6334:4;6329:3;6325:14;6318:26;6365:64;6425:2;6420:3;6416:12;6402;6365:64;:::i;:::-;6353:76;;;6477:4;6470:5;6466:16;6460:23;6492:47;6533:4;6528:3;6524:14;6508;4490:13;4483:21;4471:34;;4420:91;6492:47;;6588:4;6581:5;6577:16;6571:23;6564:4;6559:3;6555:14;6548:47;6643:4;6636:5;6632:16;6626:23;6691:3;6685:4;6681:14;6674:4;6669:3;6665:14;6658:38;6719:39;6753:4;6737:14;6719:39;:::i;:::-;6705:53;;;6806:4;6799:5;6795:16;6789:23;6856:3;6848:6;6844:16;6837:4;6832:3;6828:14;6821:40;6877:41;6911:6;6895:14;6877:41;:::i;:::-;6870:48;6003:921;-1:-1:-1;;;;;6003:921:6:o;6929:127::-;6990:10;6985:3;6981:20;6978:1;6971:31;7021:4;7018:1;7011:15;7045:4;7042:1;7035:15;7061:233;7138:1;7131:5;7128:12;7118:143;;7183:10;7178:3;7174:20;7171:1;7164:31;7218:4;7215:1;7208:15;7246:4;7243:1;7236:15;7118:143;7270:18;;7061:233::o;7299:914::-;7354:3;7382:6;7415:5;7409:12;7404:3;7397:25;7468:4;7461:5;7457:16;7451:23;7506:2;7499:4;7494:3;7490:14;7483:26;7530:51;7577:2;7572:3;7568:12;7554;7530:51;:::i;:::-;7518:63;;;7629:4;7622:5;7618:16;7612:23;7644:53;7691:4;7686:3;7682:14;7666;7644:53;:::i;:::-;;7746:4;7739:5;7735:16;7729:23;7722:4;7717:3;7713:14;7706:47;7801:4;7794:5;7790:16;7784:23;7843:1;7839;7834:3;7830:11;7826:19;7897:2;7881:14;7877:23;7870:4;7865:3;7861:14;7854:47;7962:2;7954:4;7947:5;7943:16;7937:23;7933:32;7926:4;7921:3;7917:14;7910:56;;;8014:4;8007:5;8003:16;7997:23;8062:3;8056:4;8052:14;8045:4;8040:3;8036:14;8029:38;8090:39;8124:4;8108:14;8090:39;:::i;:::-;8076:53;;;8178:4;8171:5;8167:16;8161:23;8154:4;8149:3;8145:14;8138:47;8201:6;8194:13;;;7299:914;;;;:::o;8218:854::-;8418:4;8447:2;8487;8476:9;8472:18;8517:2;8506:9;8499:21;8540:6;8575;8569:13;8606:6;8598;8591:22;8644:2;8633:9;8629:18;8622:25;;8706:2;8696:6;8693:1;8689:14;8678:9;8674:30;8670:39;8656:53;;8744:2;8736:6;8732:15;8765:1;8775:268;8789:6;8786:1;8783:13;8775:268;;;8882:2;8878:7;8866:9;8858:6;8854:22;8850:36;8845:3;8838:49;8910:53;8956:6;8947;8941:13;8910:53;:::i;:::-;8900:63;-1:-1:-1;9021:12:6;;;;8986:15;;;;8811:1;8804:9;8775:268;;;-1:-1:-1;9060:6:6;;8218:854;-1:-1:-1;;;;;;;8218:854:6:o;9077:180::-;9136:6;9189:2;9177:9;9168:7;9164:23;9160:32;9157:52;;;9205:1;9202;9195:12;9157:52;-1:-1:-1;9228:23:6;;9077:180;-1:-1:-1;9077:180:6:o;9262:833::-;9448:4;9477:2;9517;9506:9;9502:18;9547:2;9536:9;9529:21;9570:6;9605;9599:13;9636:6;9628;9621:22;9674:2;9663:9;9659:18;9652:25;;9736:2;9726:6;9723:1;9719:14;9708:9;9704:30;9700:39;9686:53;;9774:2;9766:6;9762:15;9795:1;9805:261;9819:6;9816:1;9813:13;9805:261;;;9912:2;9908:7;9896:9;9888:6;9884:22;9880:36;9875:3;9868:49;9940:46;9979:6;9970;9964:13;9940:46;:::i;:::-;9930:56;-1:-1:-1;10044:12:6;;;;10009:15;;;;9841:1;9834:9;9805:261;;10100:811;10215:6;10223;10231;10239;10292:3;10280:9;10271:7;10267:23;10263:33;10260:53;;;10309:1;10306;10299:12;10260:53;10336:23;;-1:-1:-1;;;;;10408:14:6;;;10405:34;;;10435:1;10432;10425:12;10405:34;10458:50;10500:7;10491:6;10480:9;10476:22;10458:50;:::i;:::-;10448:60;;10561:2;10550:9;10546:18;10533:32;10517:48;;10590:2;10580:8;10577:16;10574:36;;;10606:1;10603;10596:12;10574:36;10629:52;10673:7;10662:8;10651:9;10647:24;10629:52;:::i;:::-;10619:62;;10728:2;10717:9;10713:18;10700:32;10690:42;;10785:2;10774:9;10770:18;10757:32;10741:48;;10814:2;10804:8;10801:16;10798:36;;;10830:1;10827;10820:12;10798:36;;10853:52;10897:7;10886:8;10875:9;10871:24;10853:52;:::i;:::-;10843:62;;;10100:811;;;;;;;:::o;10916:525::-;11003:6;11011;11019;11072:2;11060:9;11051:7;11047:23;11043:32;11040:52;;;11088:1;11085;11078:12;11040:52;11115:23;;-1:-1:-1;;;;;11150:30:6;;11147:50;;;11193:1;11190;11183:12;11147:50;11216;11258:7;11249:6;11238:9;11234:22;11216:50;:::i;:::-;11206:60;;;11313:2;11302:9;11298:18;11285:32;11275:42;;11367:2;11356:9;11352:18;11339:32;11380:31;11405:5;11380:31;:::i;:::-;11430:5;11420:15;;;10916:525;;;;;:::o;11670:250::-;11843:2;11832:9;11825:21;11806:4;11863:51;11910:2;11899:9;11895:18;11887:6;11863:51;:::i;:::-;11855:59;11670:250;-1:-1:-1;;;11670:250:6:o;11925:811::-;12040:6;12048;12056;12064;12117:3;12105:9;12096:7;12092:23;12088:33;12085:53;;;12134:1;12131;12124:12;12085:53;12157:23;;;-1:-1:-1;12231:2:6;12216:18;;12203:32;-1:-1:-1;;;;;12284:14:6;;;12281:34;;;12311:1;12308;12301:12;12281:34;12334:50;12376:7;12367:6;12356:9;12352:22;12334:50;:::i;:::-;12324:60;;12437:2;12426:9;12422:18;12409:32;12393:48;;12466:2;12456:8;12453:16;12450:36;;;12482:1;12479;12472:12;12450:36;12505:52;12549:7;12538:8;12527:9;12523:24;12505:52;:::i;:::-;12495:62;;12610:2;12599:9;12595:18;12582:32;12566:48;;12639:2;12629:8;12626:16;12623:36;;;12655:1;12652;12645:12;12741:271;12928:2;12917:9;12910:21;12891:4;12948:58;13002:2;12991:9;12987:18;12979:6;12948:58;:::i;13017:380::-;13096:1;13092:12;;;;13139;;;13160:61;;13214:4;13206:6;13202:17;13192:27;;13160:61;13267:2;13259:6;13256:14;13236:18;13233:38;13230:161;;;13313:10;13308:3;13304:20;13301:1;13294:31;13348:4;13345:1;13338:15;13376:4;13373:1;13366:15;13402:337;13604:2;13586:21;;;13643:2;13623:18;;;13616:30;-1:-1:-1;;;13677:2:6;13662:18;;13655:43;13730:2;13715:18;;13402:337::o;13744:405::-;13946:2;13928:21;;;13985:2;13965:18;;;13958:30;14024:34;14019:2;14004:18;;13997:62;-1:-1:-1;;;14090:2:6;14075:18;;14068:39;14139:3;14124:19;;13744:405::o;14154:127::-;14215:10;14210:3;14206:20;14203:1;14196:31;14246:4;14243:1;14236:15;14270:4;14267:1;14260:15;14286:168;14326:7;14392:1;14388;14384:6;14380:14;14377:1;14374:21;14369:1;14362:9;14355:17;14351:45;14348:71;;;14399:18;;:::i;:::-;-1:-1:-1;14439:9:6;;14286:168::o;14811:146::-;-1:-1:-1;;;;;14915:36:6;;14811:146::o;15107:503::-;15176:3;15214:5;15208:12;15241:6;15236:3;15229:19;15267:4;15296:2;15291:3;15287:12;15280:19;;15318:5;15315:1;15308:16;15360:2;15357:1;15347:16;15381:1;15391:194;15405:6;15402:1;15399:13;15391:194;;;15470:13;;-1:-1:-1;;;;;15466:39:6;15454:52;;15526:12;;;;15502:1;15561:14;;;;15420:9;15391:194;;15740:1084;15825:12;;15790:3;;15880:1;15900:18;;;;15953;;;;15980:61;;16034:4;16026:6;16022:17;16012:27;;15980:61;16060:2;16108;16100:6;16097:14;16077:18;16074:38;16071:161;;;16154:10;16149:3;16145:20;16142:1;16135:31;16189:4;16186:1;16179:15;16217:4;16214:1;16207:15;16071:161;4818:19;;;4870:4;4861:14;;16341:18;16368:104;;;;16486:1;16481:337;;;;16334:484;;16368:104;-1:-1:-1;;16403:24:6;;16389:39;;16448:14;;;;-1:-1:-1;16368:104:6;;16481:337;15054:1;15047:14;;;15091:4;15078:18;;16594:1;16608:167;16622:6;16619:1;16616:13;16608:167;;;16702:14;;16687:13;;;16680:37;16745:16;;;;16637:10;;16608:167;;;16795:13;;;-1:-1:-1;;16334:484:6;;;;;;;;15740:1084;;;;:::o;16829:929::-;16885:3;16913:6;16946:5;16940:12;16935:3;16928:25;17002:4;16995:5;16991:16;16985:23;16978:4;16973:3;16969:14;16962:47;17038:75;17106:4;17099:5;17095:16;17089:23;17038:75;:::i;:::-;17122:56;17172:4;17167:3;17163:14;17149:12;17122:56;:::i;:::-;;17210:2;17203:4;17198:3;17194:14;17187:26;17234:76;17306:2;17301:3;17297:12;17290:4;17283:5;17279:16;17234:76;:::i;:::-;17222:88;;17341:64;17398:4;17391:5;17387:16;17381:23;15724:4;15708:21;;15615:120;17341:64;4490:13;4483:21;17455:4;17446:14;;4471:34;17510:4;17499:16;;17493:23;17486:4;17477:14;;17470:47;17549:14;;;17542:4;17533:14;;17526:38;17587:49;17553:4;17624;17613:16;;17587:49;:::i;:::-;17573:63;;17680:3;17672:6;17668:16;17661:4;17656:3;17652:14;17645:40;17701:51;17745:6;17738:4;17731:5;17727:16;17701:51;:::i;:::-;17694:58;16829:929;-1:-1:-1;;;;16829:929:6:o;17763:1216::-;17951:2;17940:9;17933:21;17996:6;17990:13;17985:2;17974:9;17970:18;17963:41;17914:4;18023:6;18065:2;18060;18049:9;18045:18;18038:30;18091:71;18157:3;18146:9;18142:19;18135:4;18127:6;18123:17;18091:71;:::i;:::-;18249:4;18237:17;;18231:24;15724:4;15708:21;18265:55;18316:2;18305:9;18301:18;18287:12;18265:55;:::i;:::-;;18375:4;18367:6;18363:17;18357:24;18351:3;18340:9;18336:19;18329:53;18413:76;18482:4;18474:6;18470:17;18464:24;18413:76;:::i;:::-;18498:63;18556:3;18545:9;18541:19;18525:14;18498:63;:::i;:::-;;18592:76;18661:4;18653:6;18649:17;18643:24;18592:76;:::i;:::-;18677:63;18735:3;18724:9;18720:19;18704:14;18677:63;:::i;:::-;-1:-1:-1;18781:22:6;;;-1:-1:-1;;18777:36:6;18771:3;18756:19;;18749:65;18837:52;18785:6;18875:4;18863:17;;18837:52;:::i;:::-;18823:66;;18943:4;18935:6;18931:17;18925:24;18920:2;18909:9;18905:18;18898:52;18967:6;18959:14;;;;17763:1216;;;;:::o;18984:127::-;19045:10;19040:3;19036:20;19033:1;19026:31;19076:4;19073:1;19066:15;19100:4;19097:1;19090:15;19116:135;19155:3;-1:-1:-1;;19176:17:6;;19173:43;;;19196:18;;:::i;:::-;-1:-1:-1;19243:1:6;19232:13;;19116:135::o;20013:125::-;20053:4;20081:1;20078;20075:8;20072:34;;;20086:18;;:::i;:::-;-1:-1:-1;20123:9:6;;20013:125::o;20143:364::-;20353:2;20342:9;20335:21;20316:4;20373:59;20428:2;20417:9;20413:18;20405:6;20373:59;:::i;:::-;20365:67;;20497:1;20493;20488:3;20484:11;20480:19;20472:6;20468:32;20463:2;20452:9;20448:18;20441:60;20143:364;;;;;:::o;20512:407::-;20714:2;20696:21;;;20753:2;20733:18;;;20726:30;20792:34;20787:2;20772:18;;20765:62;-1:-1:-1;;;20858:2:6;20843:18;;20836:41;20909:3;20894:19;;20512:407::o;20924:255::-;21094:2;21083:9;21076:21;21057:4;21114:59;21169:2;21158:9;21154:18;21146:6;21114:59;:::i;21184:402::-;21386:2;21368:21;;;21425:2;21405:18;;;21398:30;21464:34;21459:2;21444:18;;21437:62;-1:-1:-1;;;21530:2:6;21515:18;;21508:36;21576:3;21561:19;;21184:402::o;21591:664::-;21818:3;21856:6;21850:13;21872:53;21918:6;21913:3;21906:4;21898:6;21894:17;21872:53;:::i;:::-;21988:13;;21947:16;;;;22010:57;21988:13;21947:16;22044:4;22032:17;;22010:57;:::i;:::-;22134:13;;22089:20;;;22156:57;22134:13;22089:20;22190:4;22178:17;;22156:57;:::i;:::-;22229:20;;21591:664;-1:-1:-1;;;;;21591:664:6:o;22260:217::-;22300:1;22326;22316:132;;22370:10;22365:3;22361:20;22358:1;22351:31;22405:4;22402:1;22395:15;22433:4;22430:1;22423:15;22316:132;-1:-1:-1;22462:9:6;;22260:217::o;22842:128::-;22882:3;22913:1;22909:6;22906:1;22903:13;22900:39;;;22919:18;;:::i;:::-;-1:-1:-1;22955:9:6;;22842:128::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Base64.sol\"; // npm dependency\r\n\r\ncontract NotesExchange {\r\n    address payable public owner; // The address of the owner of the contract (manager of the system)\r\n    mapping(uint256 => Notes) private notesMapping; // The mapping of all notes that exist\r\n    mapping(uint256 => NotesService) private rentingList; // The list of all renting offers that exist, indexed by their ID\r\n    uint256 private notesTotalCount = 0; // The total number of notes that exist\r\n    uint256 private rentingTotalCount = 0; // The total number of notes that exist\r\n\r\n    /* Possible states for a renting transaction:\r\n     *   - Pending: The note taking offer has been created by the noteTaker, but has not been fulfilled yet.\r\n     *   - AwaitingAcceptance: The fulfiller has submitted the notes but the requester still has to say that they are good.\r\n     *   - Completed: The note taking offer has been completed by the noteTaker and the renter has claimed the notes.\r\n     *   - Aborted: Several possibilities:\r\n     *     1. The note taking offer has been aborted by the noteTaker while it was pending.\r\n     *     2. The fulfiller submitted the notes, but they were rejected by the renter. The fulfiller gets 1/2 of the deposit, the renter the other half.\r\n     *     3. The deadline has passed and the user has requested a refund.\r\n     */\r\n    enum State {\r\n        Pending,\r\n        AwaitingAcceptance,\r\n        Completed,\r\n        Aborted\r\n    }\r\n\r\n    struct Notes {\r\n        uint256 id; // Or use the hash?\r\n        uint256 notesValue; // The value of the notes.\r\n        address payable noteTaker; // The address of the note taker\r\n        address payable[] owners; // The address of the people who have purchased the notes\r\n        bool forBuy; // Indicates if the notes are for sale or for renting\r\n        bytes32 notesHash; // The hash of the notes\r\n        string title;\r\n        string description;\r\n    }\r\n\r\n    struct NotesService {\r\n        uint256 id;\r\n        Notes notes;\r\n        State transactionState; // The current state of the renting transaction. Default value: Pending\r\n        uint256 depositedMoney; // The total money sent. This is the value of the notes.\r\n        address payable renter;\r\n        address payable fulfiller;\r\n        string subject;\r\n        uint256 deadline; // The deadline for the note taker to complete the transaction\r\n    }\r\n\r\n    /* To rent the notes, both renter and noteTaker have to deposit twice the value of the notes.\r\n       When the transaction is completed, the noteTaker will receive 3 times the value of the notes.\r\n       The renter will receive the value of the notes. \r\n       This motivates both parties to complete the transaction as soon as possible.\r\n    */\r\n\r\n    // Events to keep a record of the transaction\r\n    event NotesSold(Notes notes, address renter);\r\n\r\n    event NotesForSaleEnabled(Notes notes);\r\n\r\n    event NotesForSaleDisabled(Notes notes);\r\n\r\n    event NotesPublished(Notes notes);\r\n\r\n    event NotesServicePending(NotesService renting);\r\n\r\n    event NotesServiceAborted(NotesService renting);\r\n\r\n    event NotesServiceAwaitingAcceptance(NotesService renting);\r\n\r\n    event NotesServiceCompleted(NotesService renting);\r\n\r\n    event NotesServiceDelegated(NotesService renting);\r\n\r\n    // Modifier that checks if the caller is the noteTaker\r\n    modifier onlyNoteTaker(Notes memory note) {\r\n        require(\r\n            payable(msg.sender) == note.noteTaker,\r\n            \"Only the note taker can call this function.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Modifier that checks if the caller is the renter\r\n    modifier onlyRenter(Notes memory note) {\r\n        require(\r\n            owns(msg.sender, note),\r\n            \"Only the renter can call this function\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Modifier that checks if the caller is the fulfiller of the service\r\n    modifier onlyFulfiller(NotesService memory renting) {\r\n        require(\r\n            renting.fulfiller == payable(msg.sender),\r\n            \"Only the fulfiller can call this function\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Modifier that checks if the transaction is in the state passed as argument\r\n    modifier inState(NotesService memory renting, State expectedState) {\r\n        require(renting.transactionState == expectedState, \"Invalid state\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        // Establish the owner of the contract\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    // Converts Wei to ETH\r\n    function weiToEth(uint256 weiAmount) public pure returns (uint256) {\r\n        return weiAmount / 1e18;\r\n    }\r\n\r\n    // Function to check if an address has bought a note\r\n    function owns(address renter, Notes memory note)\r\n        public\r\n        pure\r\n        returns (bool)\r\n    {\r\n        for (uint256 i = 0; i < note.owners.length; i++) {\r\n            if (note.owners[i] == renter) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Function to buy notes that were published for sale\r\n    function buyNotes(uint256 notesId) public payable {\r\n        Notes storage notes = notesMapping[notesId];\r\n        require(notes.forBuy, \"The notes are not for sale\");\r\n        require(\r\n            msg.value >= notes.notesValue,\r\n            \"Not enough money to buy the notes\"\r\n        );\r\n\r\n        address payable renter = payable(msg.sender);\r\n        notes.owners.push(renter);\r\n\r\n        // To avoid reentrancy attacks, the transfer of the money is done last\r\n\r\n        payable(notes.noteTaker).transfer(notes.notesValue);\r\n        renter.transfer(msg.value - notes.notesValue);\r\n\r\n        // Register the transaction through an event\r\n        emit NotesSold(notes, renter);\r\n    }\r\n\r\n    // Function to publish already taken notes for sale\r\n    function publishNotesForSale(\r\n        string memory title,\r\n        string memory description,\r\n        uint256 notesValue,\r\n        bytes memory data\r\n    ) public payable {\r\n        string memory pdf = Base64.encode(data);\r\n        bytes32 notesHash = keccak256(\r\n            abi.encodePacked(title, description, pdf)\r\n        );\r\n\r\n        // Initialize a new notes struct\r\n        Notes memory newNotes;\r\n        newNotes.forBuy = true;\r\n        newNotes.notesValue = notesValue;\r\n        newNotes.noteTaker = payable(msg.sender);\r\n        newNotes.owners = new address payable[](0);\r\n        newNotes.id = notesTotalCount;\r\n        newNotes.notesHash = notesHash;\r\n        newNotes.title = title;\r\n        newNotes.description = description;\r\n\r\n        // Add the notes to the list of notes\r\n        notesMapping[newNotes.id] = newNotes;\r\n        notesTotalCount++;\r\n\r\n        emit NotesPublished(newNotes);\r\n    }\r\n\r\n    function enableNotesForSale(uint256 notesId)\r\n        public\r\n        onlyNoteTaker(notesMapping[notesId])\r\n    {\r\n        notesMapping[notesId].forBuy = true;\r\n        emit NotesForSaleEnabled(notesMapping[notesId]);\r\n    }\r\n\r\n    function disableNotesForSale(uint256 notesId)\r\n        public\r\n        onlyNoteTaker(notesMapping[notesId])\r\n    {\r\n        notesMapping[notesId].forBuy = false;\r\n        emit NotesForSaleDisabled(notesMapping[notesId]);\r\n    }\r\n\r\n    // Function to publish a renting offer to take notes in the future\r\n    function createNotesService(\r\n        string memory subject,\r\n        uint256 deadline,\r\n        address fulfiller\r\n    ) public payable {\r\n        // Initialize a new notes struct\r\n        NotesService memory renting;\r\n        renting.deadline = deadline;\r\n        renting.fulfiller = payable(fulfiller);\r\n        renting.depositedMoney = msg.value;\r\n        renting.renter = payable(msg.sender);\r\n        renting.transactionState = State.Pending;\r\n        renting.id = rentingTotalCount;\r\n        renting.subject = subject;\r\n\r\n        // Add the notes to the list of notes\r\n        rentingList[renting.id] = renting;\r\n        rentingTotalCount++;\r\n\r\n        emit NotesServicePending(renting);\r\n    }\r\n\r\n    // Function to abort a renting offer. The fulfiller can abort before fulfilling the service.\r\n    function delegateNotesService(\r\n        uint256 rentingId,\r\n        address newFulfiller\r\n        )\r\n        public\r\n        inState(rentingList[rentingId], State.Pending)\r\n        onlyFulfiller(rentingList[rentingId])\r\n    {\r\n        NotesService storage renting = rentingList[rentingId];\r\n        require(\r\n            renting.deadline > (block.timestamp * 1000), // Convert seconds to milliseconds (block.timestamp)\r\n            \"The deadline has passed\"\r\n        );\r\n\r\n        renting.fulfiller = payable(newFulfiller);\r\n\r\n        emit NotesServiceDelegated(renting);\r\n    }\r\n\r\n    // Function to abort a renting offer. The fulfiller can abort before fulfilling the service.\r\n    function rejectService(uint256 rentingId)\r\n        public\r\n        inState(rentingList[rentingId], State.Pending)\r\n        onlyFulfiller(rentingList[rentingId])\r\n    {\r\n        NotesService storage renting = rentingList[rentingId];\r\n\r\n        // To prevent a re-entrancy attack, the state is changed before sending the money\r\n        renting.transactionState = State.Aborted;\r\n\r\n        renting.renter.transfer(renting.depositedMoney); // Return the deposit money to the renter\r\n\r\n        emit NotesServiceAborted(renting);\r\n    }\r\n\r\n    function cancelRequestedService(uint256 rentingId)\r\n        public\r\n        inState(rentingList[rentingId], State.Pending)\r\n    {\r\n        NotesService storage renting = rentingList[rentingId];\r\n        require(\r\n            renting.renter == payable(msg.sender),\r\n            \"Only the renter can call this function\"\r\n        );\r\n        // To prevent a re-entrancy attack, the state is changed before sending the money\r\n        renting.transactionState = State.Aborted;\r\n\r\n        renting.renter.transfer((renting.depositedMoney * 3) / 4); // Return 3/4 of the deposit money to the renter\r\n        renting.fulfiller.transfer((renting.depositedMoney) / 4); // Return 1/4 of the deposit money to the noteTaker\r\n\r\n        emit NotesServiceAborted(renting);\r\n    }\r\n\r\n    // Function to abort a renting offer. The fulfiller can abort before fulfilling the service.\r\n    function claimRefund(uint256 rentingId) public {\r\n        NotesService storage renting = rentingList[rentingId];\r\n        require(\r\n            renting.renter == payable(msg.sender),\r\n            \"Only the renter can call this function\"\r\n        );\r\n\r\n        if (renting.transactionState == State.Pending) {\r\n            claimRefundDeadlinePassed(renting);\r\n        } else if (renting.transactionState == State.AwaitingAcceptance) {\r\n            claimRefundNotAccepted(renting);\r\n        } else {\r\n            revert(); // The transaction is not in a state where a refund can be claimed\r\n        }\r\n    }\r\n\r\n    function claimRefundDeadlinePassed(NotesService storage renting)\r\n        private\r\n        inState(renting, State.Pending)\r\n    {\r\n        require(\r\n            renting.deadline < (block.timestamp * 1000), // Convert seconds to milliseconds (block.timestamp)\r\n            \"The deadline has not passed yet\"\r\n        );\r\n\r\n        // To prevent a re-entrancy attack, the state is changed before sending the money\r\n        renting.transactionState = State.Aborted;\r\n\r\n        renting.renter.transfer(renting.depositedMoney); // Return the deposit money to the renter\r\n\r\n        emit NotesServiceAborted(renting);\r\n    }\r\n\r\n    function claimRefundNotAccepted(NotesService storage renting)\r\n        private\r\n        inState(renting, State.AwaitingAcceptance)\r\n    {\r\n        // To prevent a re-entrancy attack, the state is changed before sending the money\r\n        renting.transactionState = State.Aborted;\r\n\r\n        renting.renter.transfer(renting.depositedMoney / 2); // Return half the deposit money to the renter\r\n        renting.fulfiller.transfer(renting.depositedMoney / 2); // Return half the deposit money to the noteTaker\r\n\r\n        emit NotesServiceAborted(renting);\r\n    }\r\n\r\n    // The fulfiller has done its job and is waiting for the noteTaker to accept the service\r\n    function fulfillNotesService(\r\n        uint256 rentingId,\r\n        string memory title,\r\n        string memory description,\r\n        bytes memory data\r\n    )\r\n        public\r\n        payable\r\n        inState(rentingList[rentingId], State.Pending)\r\n        onlyFulfiller(rentingList[rentingId])\r\n    {\r\n        NotesService storage renting = rentingList[rentingId];\r\n\r\n        renting.transactionState = State.AwaitingAcceptance;\r\n\r\n        string memory pdf = Base64.encode(data);\r\n        bytes32 notesHash = keccak256(\r\n            abi.encodePacked(title, description, pdf)\r\n        );\r\n\r\n        // Initialize a new notes struct\r\n        Notes memory newNotes;\r\n        newNotes.forBuy = false;\r\n        newNotes.notesValue = weiToEth(renting.depositedMoney);\r\n        newNotes.noteTaker = payable(msg.sender);\r\n        newNotes.owners = new address payable[](0);\r\n        newNotes.id = notesTotalCount;\r\n        newNotes.notesHash = notesHash;\r\n        newNotes.title = title;\r\n        newNotes.description = description;\r\n\r\n        // Add the notes to the list of notes\r\n        notesMapping[newNotes.id] = newNotes;\r\n        notesTotalCount++;\r\n\r\n        renting.notes = newNotes;\r\n\r\n        emit NotesPublished(newNotes);\r\n        emit NotesServiceAwaitingAcceptance(renting);\r\n    }\r\n\r\n    function acceptNotesService(uint256 rentingId)\r\n        public\r\n        inState(rentingList[rentingId], State.AwaitingAcceptance)\r\n    {\r\n        NotesService storage renting = rentingList[rentingId];\r\n        require(\r\n            renting.renter == payable(msg.sender),\r\n            \"Only the renter can call this function\"\r\n        );\r\n\r\n        // To prevent a re-entrancy attack, the state is changed before sending the money\r\n        renting.transactionState = State.Completed;\r\n\r\n        renting.fulfiller.transfer(renting.depositedMoney); // Send the deposit money to the noteTaker\r\n        renting.notes.owners.push(renting.renter); // Set the noteTaker as the owner of the notes\r\n\r\n        emit NotesServiceCompleted(renting);\r\n    }\r\n\r\n    // Get the balance of the contract\r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    // Get all notes that are currently marked as being forBuy\r\n    function getAllNotesOnSale() public view returns (Notes[] memory) {\r\n        //Notes[] memory notesOnSale = new Notes[](notesTotalCount - NotesSold); // Do we want to keep track of the notes sold?\r\n        Notes[] memory notesOnSale = new Notes[](notesTotalCount);\r\n        uint256 idx = 0;\r\n        for (uint256 i = 0; i < notesTotalCount; i++) {\r\n            if (notesMapping[i].forBuy) {\r\n                notesOnSale[idx] = notesMapping[i];\r\n                idx++;\r\n            }\r\n        }\r\n        return notesOnSale;\r\n    }\r\n\r\n    // Get all notes that are owned by the caller\r\n    function getMyNotes() public view returns (Notes[] memory) {\r\n        uint256 myNotesCount = 0;\r\n        for (uint256 i = 0; i < notesTotalCount; i++) {\r\n            if (owns(msg.sender, notesMapping[i])) {\r\n                myNotesCount++;\r\n            }\r\n        }\r\n\r\n        Notes[] memory myNotes = new Notes[](myNotesCount);\r\n        uint256 idx = 0;\r\n        for (uint256 i = 0; i < notesTotalCount; i++) {\r\n            if (owns(msg.sender, notesMapping[i])) {\r\n                myNotes[idx] = notesMapping[i];\r\n                idx++;\r\n            }\r\n        }\r\n        return myNotes;\r\n    }\r\n\r\n    // Get all notes that are owned by the caller and are for sale\r\n    function getMyNotesOnSale() public view returns (Notes[] memory) {\r\n        uint256 myNotesCount = 0;\r\n        Notes[] memory myNotes = new Notes[](myNotesCount);\r\n        uint256 idx = 0;\r\n        for (uint256 i = 0; i < notesTotalCount; i++) {\r\n            if (\r\n                notesMapping[i].noteTaker == msg.sender &&\r\n                notesMapping[i].forBuy\r\n            ) {\r\n                myNotes[idx] = notesMapping[i];\r\n                idx++;\r\n            }\r\n        }\r\n        return myNotes;\r\n    }\r\n\r\n    // Get all notes\r\n    function getAllNotes() public view returns (Notes[] memory) {\r\n        Notes[] memory allNotes = new Notes[](notesTotalCount);\r\n        for (uint256 i = 0; i < notesTotalCount; i++) {\r\n            allNotes[i] = notesMapping[i];\r\n        }\r\n        return allNotes;\r\n    }\r\n\r\n    // Get all services\r\n    function getAllServices() public view returns (NotesService[] memory) {\r\n        NotesService[] memory allServs = new NotesService[](rentingTotalCount);\r\n        for (uint256 i = 0; i < rentingTotalCount; i++) {\r\n            allServs[i] = rentingList[i];\r\n        }\r\n        return allServs;\r\n    }\r\n\r\n    // Get the total number of notes\r\n    function getNotesCount() public view returns (uint256) {\r\n        return notesTotalCount;\r\n    }\r\n\r\n    // Get the details of a note\r\n    function getNote(uint256 notesId) public view returns (Notes memory) {\r\n        Notes memory notes = notesMapping[notesId];\r\n        address[] memory owners; // We need to cast this\r\n        for (uint256 i = 0; i < notes.owners.length; i++) {\r\n            owners[i] = notes.owners[i];\r\n        }\r\n        return (notes);\r\n    }\r\n\r\n    // Get the total number of notes\r\n    function getServicesCount() public view returns (uint256) {\r\n        return rentingTotalCount;\r\n    }\r\n\r\n    // Get the details of a note\r\n    function getService(uint256 rentingId)\r\n        public\r\n        view\r\n        returns (NotesService memory)\r\n    {\r\n        NotesService memory renting = rentingList[rentingId];\r\n        return (renting);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\User\\Desktop\\Repos\\NotesExchange\\contracts\\NotesExchange.sol",
  "ast": {
    "absolutePath": "project:/contracts/NotesExchange.sol",
    "exportedSymbols": {
      "Base64": [
        46
      ],
      "NotesExchange": [
        1522
      ]
    },
    "id": 1523,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 81,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "id": 82,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1523,
        "sourceUnit": 47,
        "src": "60:50:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "NotesExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1522,
        "linearizedBaseContracts": [
          1522
        ],
        "name": "NotesExchange",
        "nameLocation": "141:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 84,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "185:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1522,
            "src": "162:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 83,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "162:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 89,
            "mutability": "mutable",
            "name": "notesMapping",
            "nameLocation": "299:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1522,
            "src": "265:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
              "typeString": "mapping(uint256 => struct NotesExchange.Notes)"
            },
            "typeName": {
              "id": 88,
              "keyType": {
                "id": 85,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "273:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "265:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                "typeString": "mapping(uint256 => struct NotesExchange.Notes)"
              },
              "valueType": {
                "id": 87,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86,
                  "name": "Notes",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 123,
                  "src": "284:5:2"
                },
                "referencedDeclaration": 123,
                "src": "284:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                  "typeString": "struct NotesExchange.Notes"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 94,
            "mutability": "mutable",
            "name": "rentingList",
            "nameLocation": "398:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1522,
            "src": "357:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
              "typeString": "mapping(uint256 => struct NotesExchange.NotesService)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 90,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "365:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "357:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                "typeString": "mapping(uint256 => struct NotesExchange.NotesService)"
              },
              "valueType": {
                "id": 92,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 91,
                  "name": "NotesService",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "376:12:2"
                },
                "referencedDeclaration": 142,
                "src": "376:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                  "typeString": "struct NotesExchange.NotesService"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 97,
            "mutability": "mutable",
            "name": "notesTotalCount",
            "nameLocation": "498:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1522,
            "src": "482:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 95,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "482:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 96,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "516:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 100,
            "mutability": "mutable",
            "name": "rentingTotalCount",
            "nameLocation": "580:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1522,
            "src": "564:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "564:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 99,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "600:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "NotesExchange.State",
            "id": 105,
            "members": [
              {
                "id": 101,
                "name": "Pending",
                "nameLocation": "1453:7:2",
                "nodeType": "EnumValue",
                "src": "1453:7:2"
              },
              {
                "id": 102,
                "name": "AwaitingAcceptance",
                "nameLocation": "1471:18:2",
                "nodeType": "EnumValue",
                "src": "1471:18:2"
              },
              {
                "id": 103,
                "name": "Completed",
                "nameLocation": "1500:9:2",
                "nodeType": "EnumValue",
                "src": "1500:9:2"
              },
              {
                "id": 104,
                "name": "Aborted",
                "nameLocation": "1520:7:2",
                "nodeType": "EnumValue",
                "src": "1520:7:2"
              }
            ],
            "name": "State",
            "nameLocation": "1436:5:2",
            "nodeType": "EnumDefinition",
            "src": "1431:103:2"
          },
          {
            "canonicalName": "NotesExchange.Notes",
            "id": 123,
            "members": [
              {
                "constant": false,
                "id": 107,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1574:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1566:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 106,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1566:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 109,
                "mutability": "mutable",
                "name": "notesValue",
                "nameLocation": "1615:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1607:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 108,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1607:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 111,
                "mutability": "mutable",
                "name": "noteTaker",
                "nameLocation": "1679:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1663:25:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 110,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1663:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 114,
                "mutability": "mutable",
                "name": "owners",
                "nameLocation": "1750:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1732:24:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                  "typeString": "address payable[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 113,
                  "nodeType": "ArrayTypeName",
                  "src": "1732:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                    "typeString": "address payable[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 116,
                "mutability": "mutable",
                "name": "forBuy",
                "nameLocation": "1830:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1825:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 115,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1825:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 118,
                "mutability": "mutable",
                "name": "notesHash",
                "nameLocation": "1909:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1901:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 117,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1901:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 120,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "1961:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1954:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 119,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1954:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "1984:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1977:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1977:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Notes",
            "nameLocation": "1549:5:2",
            "nodeType": "StructDefinition",
            "scope": 1522,
            "src": "1542:461:2",
            "visibility": "public"
          },
          {
            "canonicalName": "NotesExchange.NotesService",
            "id": 142,
            "members": [
              {
                "constant": false,
                "id": 125,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2050:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2042:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 124,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2042:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 128,
                "mutability": "mutable",
                "name": "notes",
                "nameLocation": "2069:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2063:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                  "typeString": "struct NotesExchange.Notes"
                },
                "typeName": {
                  "id": 127,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 126,
                    "name": "Notes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 123,
                    "src": "2063:5:2"
                  },
                  "referencedDeclaration": 123,
                  "src": "2063:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "mutability": "mutable",
                "name": "transactionState",
                "nameLocation": "2091:16:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2085:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$105",
                  "typeString": "enum NotesExchange.State"
                },
                "typeName": {
                  "id": 130,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 129,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 105,
                    "src": "2085:5:2"
                  },
                  "referencedDeclaration": 105,
                  "src": "2085:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$105",
                    "typeString": "enum NotesExchange.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 133,
                "mutability": "mutable",
                "name": "depositedMoney",
                "nameLocation": "2198:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2190:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 132,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2190:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 135,
                "mutability": "mutable",
                "name": "renter",
                "nameLocation": "2296:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2280:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 134,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2280:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 137,
                "mutability": "mutable",
                "name": "fulfiller",
                "nameLocation": "2329:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2313:25:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 136,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2313:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 139,
                "mutability": "mutable",
                "name": "subject",
                "nameLocation": "2356:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2349:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 138,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2349:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 141,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "2382:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "2374:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 140,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2374:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NotesService",
            "nameLocation": "2018:12:2",
            "nodeType": "StructDefinition",
            "scope": 1522,
            "src": "2011:450:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 149,
            "name": "NotesSold",
            "nameLocation": "2879:9:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "notes",
                  "nameLocation": "2895:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2889:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 143,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "2889:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "2889:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "renter",
                  "nameLocation": "2910:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2902:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2902:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2888:29:2"
            },
            "src": "2873:45:2"
          },
          {
            "anonymous": false,
            "id": 154,
            "name": "NotesForSaleEnabled",
            "nameLocation": "2932:19:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "notes",
                  "nameLocation": "2958:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2952:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 150,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "2952:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "2952:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2951:13:2"
            },
            "src": "2926:39:2"
          },
          {
            "anonymous": false,
            "id": 159,
            "name": "NotesForSaleDisabled",
            "nameLocation": "2979:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "notes",
                  "nameLocation": "3006:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "3000:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 156,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "3000:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "3000:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2999:13:2"
            },
            "src": "2973:40:2"
          },
          {
            "anonymous": false,
            "id": 164,
            "name": "NotesPublished",
            "nameLocation": "3027:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "notes",
                  "nameLocation": "3048:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "3042:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 161,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 160,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "3042:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "3042:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3041:13:2"
            },
            "src": "3021:34:2"
          },
          {
            "anonymous": false,
            "id": 169,
            "name": "NotesServicePending",
            "nameLocation": "3069:19:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "3102:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "3089:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 166,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 165,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3089:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "3089:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3088:22:2"
            },
            "src": "3063:48:2"
          },
          {
            "anonymous": false,
            "id": 174,
            "name": "NotesServiceAborted",
            "nameLocation": "3125:19:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "3158:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3145:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 171,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 170,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3145:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "3145:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3144:22:2"
            },
            "src": "3119:48:2"
          },
          {
            "anonymous": false,
            "id": 179,
            "name": "NotesServiceAwaitingAcceptance",
            "nameLocation": "3181:30:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "3225:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "3212:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 176,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 175,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3212:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "3212:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3211:22:2"
            },
            "src": "3175:59:2"
          },
          {
            "anonymous": false,
            "id": 184,
            "name": "NotesServiceCompleted",
            "nameLocation": "3248:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "3283:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "3270:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 181,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 180,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3270:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "3270:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3269:22:2"
            },
            "src": "3242:50:2"
          },
          {
            "anonymous": false,
            "id": 189,
            "name": "NotesServiceDelegated",
            "nameLocation": "3306:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "3341:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "3328:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 185,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3328:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "3328:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3327:22:2"
            },
            "src": "3300:50:2"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "3460:161:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 197,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3501:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3501:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3493:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3493:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3493:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 200,
                            "name": "note",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "3516:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                              "typeString": "struct NotesExchange.Notes memory"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "noteTaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "3516:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3493:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206e6f74652074616b65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3545:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_966290486f98d10b55645e0db33cb6419b0d2e0c06fca9dde9ce17d3c1463265",
                          "typeString": "literal_string \"Only the note taker can call this function.\""
                        },
                        "value": "Only the note taker can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_966290486f98d10b55645e0db33cb6419b0d2e0c06fca9dde9ce17d3c1463265",
                          "typeString": "literal_string \"Only the note taker can call this function.\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3471:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3471:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:130:2"
                },
                {
                  "id": 206,
                  "nodeType": "PlaceholderStatement",
                  "src": "3612:1:2"
                }
              ]
            },
            "id": 208,
            "name": "onlyNoteTaker",
            "nameLocation": "3427:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "note",
                  "nameLocation": "3454:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "3441:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 191,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 190,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "3441:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "3441:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3440:19:2"
            },
            "src": "3418:203:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3725:141:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 215,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3763:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3763:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 217,
                            "name": "note",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "3775:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                              "typeString": "struct NotesExchange.Notes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                              "typeString": "struct NotesExchange.Notes memory"
                            }
                          ],
                          "id": 214,
                          "name": "owns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "3758:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_Notes_$123_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,struct NotesExchange.Notes memory) pure returns (bool)"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3758:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652072656e7465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3795:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        },
                        "value": "Only the renter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3736:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:110:2"
                },
                {
                  "id": 222,
                  "nodeType": "PlaceholderStatement",
                  "src": "3857:1:2"
                }
              ]
            },
            "id": 224,
            "name": "onlyRenter",
            "nameLocation": "3695:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "note",
                  "nameLocation": "3719:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3706:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 210,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 209,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "3706:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "3706:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3705:19:2"
            },
            "src": "3686:180:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "4001:162:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 230,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "4034:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                              "typeString": "struct NotesExchange.NotesService memory"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fulfiller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "4034:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 234,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4063:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4063:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4055:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 232,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4055:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4055:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4034:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652066756c66696c6c65722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4089:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49091f334568c08e875585d9b524a983df59d6e6f811785144fa57f178979b20",
                          "typeString": "literal_string \"Only the fulfiller can call this function\""
                        },
                        "value": "Only the fulfiller can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49091f334568c08e875585d9b524a983df59d6e6f811785144fa57f178979b20",
                          "typeString": "literal_string \"Only the fulfiller can call this function\""
                        }
                      ],
                      "id": 229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4012:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:131:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:131:2"
                },
                {
                  "id": 241,
                  "nodeType": "PlaceholderStatement",
                  "src": "4154:1:2"
                }
              ]
            },
            "id": 243,
            "name": "onlyFulfiller",
            "nameLocation": "3958:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "3992:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3972:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 225,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3972:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "3972:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3971:29:2"
            },
            "src": "3949:214:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "4321:98:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$105",
                          "typeString": "enum NotesExchange.State"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 252,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "4340:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                              "typeString": "struct NotesExchange.NotesService memory"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transactionState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 131,
                          "src": "4340:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$105",
                            "typeString": "enum NotesExchange.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 254,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "4368:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$105",
                            "typeString": "enum NotesExchange.State"
                          }
                        },
                        "src": "4340:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374617465",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4383:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60",
                          "typeString": "literal_string \"Invalid state\""
                        },
                        "value": "Invalid state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93c7bfb09523d58f01b6a32948850d1d1f88882bc86f0ef13b8b0537eea45f60",
                          "typeString": "literal_string \"Invalid state\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4332:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "4332:67:2"
                },
                {
                  "id": 259,
                  "nodeType": "PlaceholderStatement",
                  "src": "4410:1:2"
                }
              ]
            },
            "id": 261,
            "name": "inState",
            "nameLocation": "4263:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "4291:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "4271:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 245,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 244,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "4271:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "4271:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "expectedState",
                  "nameLocation": "4306:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "4300:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$105",
                    "typeString": "enum NotesExchange.State"
                  },
                  "typeName": {
                    "id": 248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 247,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 105,
                      "src": "4300:5:2"
                    },
                    "referencedDeclaration": 105,
                    "src": "4300:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4270:50:2"
            },
            "src": "4254:165:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "4441:94:2",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 264,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "4500:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 267,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4516:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4516:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4508:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4508:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4508:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4500:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4500:27:2"
                }
              ]
            },
            "id": 273,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4438:2:2"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4441:0:2"
            },
            "scope": 1522,
            "src": "4427:108:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "4638:42:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 280,
                      "name": "weiAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "4656:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4668:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "4656:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 283,
                  "nodeType": "Return",
                  "src": "4649:23:2"
                }
              ]
            },
            "functionSelector": "f99a910c",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "weiToEth",
            "nameLocation": "4580:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "4597:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4589:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4588:19:2"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4629:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4629:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4628:9:2"
            },
            "scope": 1522,
            "src": "4571:109:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "4854:192:2",
              "statements": [
                {
                  "body": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "4914:102:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 307,
                                "name": "note",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "4933:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                  "typeString": "struct NotesExchange.Notes memory"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 114,
                              "src": "4933:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                "typeString": "address payable[] memory"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "id": 309,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4945:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4933:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 311,
                            "name": "renter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "4951:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4933:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 316,
                        "nodeType": "IfStatement",
                        "src": "4929:76:2",
                        "trueBody": {
                          "id": 315,
                          "nodeType": "Block",
                          "src": "4959:46:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4985:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 294,
                              "id": 314,
                              "nodeType": "Return",
                              "src": "4978:11:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 299,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "4885:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 300,
                          "name": "note",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "4889:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                            "typeString": "struct NotesExchange.Notes memory"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 114,
                        "src": "4889:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4889:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4885:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "initializationExpression": {
                    "assignments": [
                      296
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4878:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 318,
                        "src": "4870:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4870:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 298,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4882:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4870:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4909:3:2",
                      "subExpression": {
                        "id": 304,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "4909:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 306,
                    "nodeType": "ExpressionStatement",
                    "src": "4909:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4865:151:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5033:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 294,
                  "id": 320,
                  "nodeType": "Return",
                  "src": "5026:12:2"
                }
              ]
            },
            "functionSelector": "1d3c4f35",
            "id": 322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owns",
            "nameLocation": "4755:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "renter",
                  "nameLocation": "4768:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "4760:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "note",
                  "nameLocation": "4789:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "4776:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 288,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "4776:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "4776:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4759:35:2"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "4843:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4843:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4842:6:2"
            },
            "scope": 1522,
            "src": "4746:300:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "5163:638:2",
              "statements": [
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "notes",
                      "nameLocation": "5188:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 390,
                      "src": "5174:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      },
                      "typeName": {
                        "id": 328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 327,
                          "name": "Notes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123,
                          "src": "5174:5:2"
                        },
                        "referencedDeclaration": 123,
                        "src": "5174:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                          "typeString": "struct NotesExchange.Notes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "baseExpression": {
                      "id": 330,
                      "name": "notesMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "5196:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                      }
                    },
                    "id": 332,
                    "indexExpression": {
                      "id": 331,
                      "name": "notesId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "5209:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5196:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5174:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 335,
                          "name": "notes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "5236:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes storage pointer"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "forBuy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116,
                        "src": "5236:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206e6f74657320617265206e6f7420666f722073616c65",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5250:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ad1ae08294ed2d36a63be916ba6e63ac1b851cb201fe8a13f96fa395210e84f",
                          "typeString": "literal_string \"The notes are not for sale\""
                        },
                        "value": "The notes are not for sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ad1ae08294ed2d36a63be916ba6e63ac1b851cb201fe8a13f96fa395210e84f",
                          "typeString": "literal_string \"The notes are not for sale\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5228:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5228:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 341,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5312:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5312:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 343,
                            "name": "notes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "5325:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                              "typeString": "struct NotesExchange.Notes storage pointer"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "notesValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 109,
                          "src": "5325:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5312:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e657920746f2062757920746865206e6f746573",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5356:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4bd699b3111cf560520059ce70af0379069b72e8a7babaf37e0ad9829fe8484",
                          "typeString": "literal_string \"Not enough money to buy the notes\""
                        },
                        "value": "Not enough money to buy the notes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4bd699b3111cf560520059ce70af0379069b72e8a7babaf37e0ad9829fe8484",
                          "typeString": "literal_string \"Not enough money to buy the notes\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5290:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5290:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5290:112:2"
                },
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "renter",
                      "nameLocation": "5431:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 390,
                      "src": "5415:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5415:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5448:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5448:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5440:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5440:8:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5440:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5415:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 362,
                        "name": "renter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "5488:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 357,
                          "name": "notes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "5470:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes storage pointer"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 114,
                        "src": "5470:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5470:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5470:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:25:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 371,
                          "name": "notes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "5624:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes storage pointer"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "notesValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "5624:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 367,
                              "name": "notes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 329,
                              "src": "5598:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                                "typeString": "struct NotesExchange.Notes storage pointer"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "noteTaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 111,
                            "src": "5598:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5590:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5590:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5590:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5590:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "5590:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 378,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5668:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5668:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 380,
                            "name": "notes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "5680:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                              "typeString": "struct NotesExchange.Notes storage pointer"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "notesValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 109,
                          "src": "5680:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5668:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 375,
                        "name": "renter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "5652:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5652:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5652:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 386,
                        "name": "notes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "5779:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                          "typeString": "struct NotesExchange.Notes storage pointer"
                        }
                      },
                      {
                        "id": 387,
                        "name": "renter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "5786:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                          "typeString": "struct NotesExchange.Notes storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 385,
                      "name": "NotesSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "5769:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Notes_$123_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct NotesExchange.Notes memory,address)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5769:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "EmitStatement",
                  "src": "5764:29:2"
                }
              ]
            },
            "functionSelector": "40f81ee5",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyNotes",
            "nameLocation": "5122:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "notesId",
                  "nameLocation": "5139:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "5131:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5131:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5130:17:2"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5163:0:2"
            },
            "scope": 1522,
            "src": "5113:688:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "6040:746:2",
              "statements": [
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "pdf",
                      "nameLocation": "6065:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 494,
                      "src": "6051:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6051:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 408,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 406,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "6085:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 404,
                        "name": "Base64",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6071:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base64_$46_$",
                          "typeString": "type(library Base64)"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6071:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (string memory)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6051:39:2"
                },
                {
                  "assignments": [
                    410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 410,
                      "mutability": "mutable",
                      "name": "notesHash",
                      "nameLocation": "6109:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 494,
                      "src": "6101:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 409,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6101:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 414,
                            "name": "title",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "6162:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 415,
                            "name": "description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6169:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 416,
                            "name": "pdf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "6182:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 412,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6145:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6145:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6145:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 411,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "6121:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6101:96:2"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "newNotes",
                      "nameLocation": "6265:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 494,
                      "src": "6252:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      },
                      "typeName": {
                        "id": 421,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 420,
                          "name": "Notes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123,
                          "src": "6252:5:2"
                        },
                        "referencedDeclaration": 123,
                        "src": "6252:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                          "typeString": "struct NotesExchange.Notes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 423,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6252:21:2"
                },
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 424,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6284:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "forBuy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "6284:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6302:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6284:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "6284:22:2"
                },
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 430,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6317:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "notesValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 109,
                      "src": "6317:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 433,
                      "name": "notesValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "6339:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6317:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "6317:32:2"
                },
                {
                  "expression": {
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 436,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6360:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noteTaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "6360:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 441,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6389:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6389:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6381:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6381:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6381:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6360:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "6360:40:2"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 446,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6411:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "6411:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6451:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6429:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 449,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6433:15:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 450,
                          "nodeType": "ArrayTypeName",
                          "src": "6433:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6429:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "6411:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                      "typeString": "address payable[] memory"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "6411:42:2"
                },
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 456,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6464:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107,
                      "src": "6464:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "6478:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6464:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "6464:29:2"
                },
                {
                  "expression": {
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 462,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6504:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "notesHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118,
                      "src": "6504:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 465,
                      "name": "notesHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "6525:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6504:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "6504:30:2"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 468,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6545:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120,
                      "src": "6545:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 471,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "6562:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6545:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "6545:22:2"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 474,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6578:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122,
                      "src": "6578:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 477,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "6601:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6578:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:34:2"
                },
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 480,
                        "name": "notesMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "6672:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                          "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                        }
                      },
                      "id": 483,
                      "indexExpression": {
                        "expression": {
                          "id": 481,
                          "name": "newNotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "6685:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                            "typeString": "struct NotesExchange.Notes memory"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 107,
                        "src": "6685:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6672:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage",
                        "typeString": "struct NotesExchange.Notes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 484,
                      "name": "newNotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "6700:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                        "typeString": "struct NotesExchange.Notes memory"
                      }
                    },
                    "src": "6672:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "6672:36:2"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6719:17:2",
                    "subExpression": {
                      "id": 487,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "6719:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "6719:17:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "6769:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      ],
                      "id": 490,
                      "name": "NotesPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "6754:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Notes_$123_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.Notes memory)"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6754:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "EmitStatement",
                  "src": "6749:29:2"
                }
              ]
            },
            "functionSelector": "677e8471",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "publishNotesForSale",
            "nameLocation": "5875:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "5919:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5905:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5905:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "5949:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5935:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5935:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "notesValue",
                  "nameLocation": "5979:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5971:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5971:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6013:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "6000:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6000:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5894:130:2"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6040:0:2"
            },
            "scope": 1522,
            "src": "5866:920:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "6906:112:2",
              "statements": [
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 505,
                          "name": "notesMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "6917:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                            "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                          }
                        },
                        "id": 507,
                        "indexExpression": {
                          "id": 506,
                          "name": "notesId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "6930:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6917:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage",
                          "typeString": "struct NotesExchange.Notes storage ref"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "forBuy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "6917:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6948:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6917:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6917:35:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 513,
                          "name": "notesMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "6988:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                            "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                          }
                        },
                        "id": 515,
                        "indexExpression": {
                          "id": 514,
                          "name": "notesId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "7001:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6988:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage",
                          "typeString": "struct NotesExchange.Notes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Notes_$123_storage",
                          "typeString": "struct NotesExchange.Notes storage ref"
                        }
                      ],
                      "id": 512,
                      "name": "NotesForSaleEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "6968:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Notes_$123_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.Notes memory)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6968:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "EmitStatement",
                  "src": "6963:47:2"
                }
              ]
            },
            "functionSelector": "432e3346",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 500,
                      "name": "notesMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "6878:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                      }
                    },
                    "id": 502,
                    "indexExpression": {
                      "id": 501,
                      "name": "notesId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "6891:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6878:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  }
                ],
                "id": 503,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 499,
                  "name": "onlyNoteTaker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 208,
                  "src": "6864:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6864:36:2"
              }
            ],
            "name": "enableNotesForSale",
            "nameLocation": "6803:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "notesId",
                  "nameLocation": "6830:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "6822:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6822:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6821:17:2"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6906:0:2"
            },
            "scope": 1522,
            "src": "6794:224:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "7139:114:2",
              "statements": [
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 529,
                          "name": "notesMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "7150:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                            "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                          }
                        },
                        "id": 531,
                        "indexExpression": {
                          "id": 530,
                          "name": "notesId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "7163:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7150:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage",
                          "typeString": "struct NotesExchange.Notes storage ref"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "forBuy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "7150:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7181:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7150:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "7150:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 537,
                          "name": "notesMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "7223:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                            "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                          }
                        },
                        "id": 539,
                        "indexExpression": {
                          "id": 538,
                          "name": "notesId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "7236:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7223:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage",
                          "typeString": "struct NotesExchange.Notes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Notes_$123_storage",
                          "typeString": "struct NotesExchange.Notes storage ref"
                        }
                      ],
                      "id": 536,
                      "name": "NotesForSaleDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "7202:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Notes_$123_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.Notes memory)"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7202:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "EmitStatement",
                  "src": "7197:48:2"
                }
              ]
            },
            "functionSelector": "9d1f7b4d",
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 524,
                      "name": "notesMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "7111:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                      }
                    },
                    "id": 526,
                    "indexExpression": {
                      "id": 525,
                      "name": "notesId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "7124:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7111:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  }
                ],
                "id": 527,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 523,
                  "name": "onlyNoteTaker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 208,
                  "src": "7097:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7097:36:2"
              }
            ],
            "name": "disableNotesForSale",
            "nameLocation": "7035:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "notesId",
                  "nameLocation": "7063:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "7055:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7055:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7054:17:2"
            },
            "returnParameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7139:0:2"
            },
            "scope": 1522,
            "src": "7026:227:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "7470:564:2",
              "statements": [
                {
                  "assignments": [
                    554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 554,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "7543:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "7523:27:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 553,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 552,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "7523:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "7523:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 555,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7523:27:2"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 556,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7561:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "7561:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "7580:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7561:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "7561:27:2"
                },
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 562,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7599:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fulfiller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137,
                      "src": "7599:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 567,
                          "name": "fulfiller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "7627:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7619:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7619:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7619:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7599:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "7599:38:2"
                },
                {
                  "expression": {
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 571,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7648:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedMoney",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 133,
                      "src": "7648:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 574,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7673:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "7673:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7648:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "7648:34:2"
                },
                {
                  "expression": {
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 578,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7693:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "renter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 135,
                      "src": "7693:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 583,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7718:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7718:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7710:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7710:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7710:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7693:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "7693:36:2"
                },
                {
                  "expression": {
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 588,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7740:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "7740:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 591,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "7767:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "7767:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "7740:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "7740:40:2"
                },
                {
                  "expression": {
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 595,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7791:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125,
                      "src": "7791:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 598,
                      "name": "rentingTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "7804:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7791:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "7791:30:2"
                },
                {
                  "expression": {
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 601,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7832:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "subject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 139,
                      "src": "7832:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 604,
                      "name": "subject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "7850:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7832:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "7832:25:2"
                },
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 607,
                        "name": "rentingList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "7917:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                          "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                        }
                      },
                      "id": 610,
                      "indexExpression": {
                        "expression": {
                          "id": 608,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "7929:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                            "typeString": "struct NotesExchange.NotesService memory"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 125,
                        "src": "7929:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7917:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage",
                        "typeString": "struct NotesExchange.NotesService storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 611,
                      "name": "renting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "7943:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                        "typeString": "struct NotesExchange.NotesService memory"
                      }
                    },
                    "src": "7917:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7917:33:2"
                },
                {
                  "expression": {
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7961:19:2",
                    "subExpression": {
                      "id": 614,
                      "name": "rentingTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "7961:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "7961:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 618,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "8018:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      ],
                      "id": 617,
                      "name": "NotesServicePending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "7998:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7998:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "EmitStatement",
                  "src": "7993:33:2"
                }
              ]
            },
            "functionSelector": "710be370",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNotesService",
            "nameLocation": "7342:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "subject",
                  "nameLocation": "7385:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "7371:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7371:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7411:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "7403:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7403:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "fulfiller",
                  "nameLocation": "7438:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "7430:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7430:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7360:94:2"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7470:0:2"
            },
            "scope": 1522,
            "src": "7333:701:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "8364:354:2",
              "statements": [
                {
                  "assignments": [
                    643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 643,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "8396:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 673,
                      "src": "8375:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 642,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 641,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "8375:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "8375:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 647,
                  "initialValue": {
                    "baseExpression": {
                      "id": 644,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8406:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 646,
                    "indexExpression": {
                      "id": 645,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "8418:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8406:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8375:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 649,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "8461:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 141,
                          "src": "8461:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 651,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "8481:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8481:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8499:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "8481:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8480:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8461:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520646561646c696e652068617320706173736564",
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8572:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3184ef53a77d590f584cb63c29342c2b3d2451cccb94717b4deaa3f4bc80155",
                          "typeString": "literal_string \"The deadline has passed\""
                        },
                        "value": "The deadline has passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3184ef53a77d590f584cb63c29342c2b3d2451cccb94717b4deaa3f4bc80155",
                          "typeString": "literal_string \"The deadline has passed\""
                        }
                      ],
                      "id": 648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8439:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8439:169:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "8439:169:2"
                },
                {
                  "expression": {
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 660,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "8621:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fulfiller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137,
                      "src": "8621:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 665,
                          "name": "newFulfiller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "8649:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8641:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8641:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8641:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8621:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "8621:41:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 670,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "8702:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 669,
                      "name": "NotesServiceDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "8680:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8680:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "EmitStatement",
                  "src": "8675:35:2"
                }
              ]
            },
            "functionSelector": "0a3276a9",
            "id": 674,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 629,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8273:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 631,
                    "indexExpression": {
                      "id": 630,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "8285:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8273:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  {
                    "expression": {
                      "id": 632,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "8297:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Pending",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101,
                    "src": "8297:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 628,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "8265:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8265:46:2"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 636,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8335:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 638,
                    "indexExpression": {
                      "id": 637,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "8347:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8335:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  }
                ],
                "id": 639,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 635,
                  "name": "onlyFulfiller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "8321:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8321:37:2"
              }
            ],
            "name": "delegateNotesService",
            "nameLocation": "8149:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "8188:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "8180:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8180:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "newFulfiller",
                  "nameLocation": "8216:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "8208:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8208:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8169:70:2"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8364:0:2"
            },
            "scope": 1522,
            "src": "8140:578:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "8990:364:2",
              "statements": [
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "9022:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "9001:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 692,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 691,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "9001:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "9001:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "baseExpression": {
                      "id": 694,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "9032:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 696,
                    "indexExpression": {
                      "id": 695,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "9044:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9032:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9001:53:2"
                },
                {
                  "expression": {
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 698,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "9158:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "9158:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 701,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "9185:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Aborted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104,
                      "src": "9185:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "9158:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "9158:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 710,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "9235:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedMoney",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 133,
                        "src": "9235:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 705,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "9211:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "9211:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9211:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9211:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "9211:47:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 715,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "9338:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 714,
                      "name": "NotesServiceAborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "9318:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9318:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "EmitStatement",
                  "src": "9313:33:2"
                }
              ]
            },
            "functionSelector": "b2548713",
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 679,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8899:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 681,
                    "indexExpression": {
                      "id": 680,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "8911:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8899:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  {
                    "expression": {
                      "id": 682,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "8923:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Pending",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101,
                    "src": "8923:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 678,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "8891:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8891:46:2"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 686,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "8961:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 688,
                    "indexExpression": {
                      "id": 687,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "8973:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8961:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  }
                ],
                "id": 689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 685,
                  "name": "onlyFulfiller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "8947:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8947:37:2"
              }
            ],
            "name": "rejectService",
            "nameLocation": "8833:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "8855:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "8847:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8847:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8846:19:2"
            },
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8990:0:2"
            },
            "scope": 1522,
            "src": "8824:530:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "9490:634:2",
              "statements": [
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "9522:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 787,
                      "src": "9501:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "9501:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "9501:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "baseExpression": {
                      "id": 734,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "9532:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 736,
                    "indexExpression": {
                      "id": 735,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "9544:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9532:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9501:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 739,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "9587:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "9587:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 743,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "9613:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9613:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9605:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9605:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9605:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9587:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652072656e7465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9639:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        },
                        "value": "Only the renter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9565:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9565:125:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "9565:125:2"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 750,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "9792:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "9792:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 753,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "9819:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Aborted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104,
                      "src": "9819:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "9792:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "9792:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 762,
                                  "name": "renting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 733,
                                  "src": "9870:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                                    "typeString": "struct NotesExchange.NotesService storage pointer"
                                  }
                                },
                                "id": 763,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "depositedMoney",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 133,
                                "src": "9870:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9895:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "9870:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 766,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9869:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9900:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "9869:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 757,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 733,
                          "src": "9845:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "9845:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9845:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9845:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "9845:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "expression": {
                                "id": 776,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "9990:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                                  "typeString": "struct NotesExchange.NotesService storage pointer"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "depositedMoney",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 133,
                              "src": "9990:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 778,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9989:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10016:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "9989:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 771,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 733,
                          "src": "9962:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fulfiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 137,
                        "src": "9962:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9962:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9962:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "9962:56:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 784,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "10108:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 783,
                      "name": "NotesServiceAborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "10088:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10088:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "EmitStatement",
                  "src": "10083:33:2"
                }
              ]
            },
            "functionSelector": "b890194a",
            "id": 788,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 724,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "9446:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 726,
                    "indexExpression": {
                      "id": 725,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "9458:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9446:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  {
                    "expression": {
                      "id": 727,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "9470:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Pending",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101,
                    "src": "9470:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 729,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 723,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "9438:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9438:46:2"
              }
            ],
            "name": "cancelRequestedService",
            "nameLocation": "9371:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "9402:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "9394:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9394:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9393:19:2"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9490:0:2"
            },
            "scope": 1522,
            "src": "9362:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "10277:558:2",
              "statements": [
                {
                  "assignments": [
                    795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "10309:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "10288:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 794,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 793,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "10288:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "10288:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 799,
                  "initialValue": {
                    "baseExpression": {
                      "id": 796,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "10319:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 798,
                    "indexExpression": {
                      "id": 797,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "10331:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10319:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10288:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 801,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "10374:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "10374:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 805,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10400:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10400:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10392:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 803,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10392:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10392:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10374:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652072656e7465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10426:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        },
                        "value": "Only the renter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        }
                      ],
                      "id": 800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10352:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10352:125:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "10352:125:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 812,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "10494:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "10494:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 814,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "10522:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "10522:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "10494:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 822,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "10608:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transactionState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 131,
                        "src": "10608:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$105",
                          "typeString": "enum NotesExchange.State"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 824,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "10636:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                            "typeString": "type(enum NotesExchange.State)"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AwaitingAcceptance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 102,
                        "src": "10636:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$105",
                          "typeString": "enum NotesExchange.State"
                        }
                      },
                      "src": "10608:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 835,
                      "nodeType": "Block",
                      "src": "10726:102:2",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 832,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "10741:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10741:8:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 834,
                          "nodeType": "ExpressionStatement",
                          "src": "10741:8:2"
                        }
                      ]
                    },
                    "id": 836,
                    "nodeType": "IfStatement",
                    "src": "10604:224:2",
                    "trueBody": {
                      "id": 831,
                      "nodeType": "Block",
                      "src": "10662:58:2",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 828,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "10700:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                                  "typeString": "struct NotesExchange.NotesService storage pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                                  "typeString": "struct NotesExchange.NotesService storage pointer"
                                }
                              ],
                              "id": 827,
                              "name": "claimRefundNotAccepted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "10677:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NotesService_$142_storage_ptr_$returns$__$",
                                "typeString": "function (struct NotesExchange.NotesService storage pointer)"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10677:31:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 830,
                          "nodeType": "ExpressionStatement",
                          "src": "10677:31:2"
                        }
                      ]
                    }
                  },
                  "id": 837,
                  "nodeType": "IfStatement",
                  "src": "10490:338:2",
                  "trueBody": {
                    "id": 821,
                    "nodeType": "Block",
                    "src": "10537:61:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 818,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "10578:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                                "typeString": "struct NotesExchange.NotesService storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                                "typeString": "struct NotesExchange.NotesService storage pointer"
                              }
                            ],
                            "id": 817,
                            "name": "claimRefundDeadlinePassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "10552:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NotesService_$142_storage_ptr_$returns$__$",
                              "typeString": "function (struct NotesExchange.NotesService storage pointer)"
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10552:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 820,
                        "nodeType": "ExpressionStatement",
                        "src": "10552:34:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "5b7baf64",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nameLocation": "10239:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "10259:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10251:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10251:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10250:19:2"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10277:0:2"
            },
            "scope": 1522,
            "src": "10230:605:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "10971:488:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 851,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 842,
                            "src": "11004:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 141,
                          "src": "11004:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 853,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "11024:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "11024:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11042:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "11024:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 857,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11023:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11004:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520646561646c696e6520686173206e6f742070617373656420796574",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11115:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47b4f6d22471987b07d980b08ede9dcc1ff24ad3c7ab893a36920a78baab32b8",
                          "typeString": "literal_string \"The deadline has not passed yet\""
                        },
                        "value": "The deadline has not passed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47b4f6d22471987b07d980b08ede9dcc1ff24ad3c7ab893a36920a78baab32b8",
                          "typeString": "literal_string \"The deadline has not passed yet\""
                        }
                      ],
                      "id": 850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10982:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:177:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "10982:177:2"
                },
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 862,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "11263:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "11263:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 865,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "11290:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Aborted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104,
                      "src": "11290:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "11263:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "11263:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 874,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "11340:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedMoney",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 133,
                        "src": "11340:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 869,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "11316:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "11316:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11316:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11316:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "11316:47:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 879,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "11443:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 878,
                      "name": "NotesServiceAborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "11423:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11423:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "EmitStatement",
                  "src": "11418:33:2"
                }
              ]
            },
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 845,
                    "name": "renting",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 842,
                    "src": "10942:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService storage pointer"
                    }
                  },
                  {
                    "expression": {
                      "id": 846,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "10951:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Pending",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101,
                    "src": "10951:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 844,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "10934:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10934:31:2"
              }
            ],
            "name": "claimRefundDeadlinePassed",
            "nameLocation": "10852:25:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "10899:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "10878:28:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 841,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 840,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "10878:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "10878:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10877:30:2"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10971:0:2"
            },
            "scope": 1522,
            "src": "10843:616:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "11603:422:2",
              "statements": [
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 894,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "11705:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "11705:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 897,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "11732:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Aborted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104,
                      "src": "11732:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "11705:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "11705:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 906,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "11782:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 907,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 133,
                          "src": "11782:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11807:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "11782:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 901,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "11758:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "11758:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11758:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11758:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "11758:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 917,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "11894:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 133,
                          "src": "11894:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11919:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "11894:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 912,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "11867:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fulfiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 137,
                        "src": "11867:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11867:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11867:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "11867:54:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 924,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "12009:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 923,
                      "name": "NotesServiceAborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "11989:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11989:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "EmitStatement",
                  "src": "11984:33:2"
                }
              ]
            },
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 889,
                    "name": "renting",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 886,
                    "src": "11563:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService storage pointer"
                    }
                  },
                  {
                    "expression": {
                      "id": 890,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "11572:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "AwaitingAcceptance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 102,
                    "src": "11572:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 892,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 888,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "11555:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11555:42:2"
              }
            ],
            "name": "claimRefundNotAccepted",
            "nameLocation": "11476:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "11520:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "11499:28:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 884,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "11499:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "11499:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11498:30:2"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11603:0:2"
            },
            "scope": 1522,
            "src": "11467:558:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "12426:991:2",
              "statements": [
                {
                  "assignments": [
                    953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 953,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "12458:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "12437:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 952,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 951,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "12437:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "12437:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 957,
                  "initialValue": {
                    "baseExpression": {
                      "id": 954,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "12468:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 956,
                    "indexExpression": {
                      "id": 955,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 930,
                      "src": "12480:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12468:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12437:53:2"
                },
                {
                  "expression": {
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 958,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "12503:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "12503:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 961,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "12530:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "AwaitingAcceptance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "12530:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "12503:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "12503:51:2"
                },
                {
                  "assignments": [
                    966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 966,
                      "mutability": "mutable",
                      "name": "pdf",
                      "nameLocation": "12581:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "12567:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 965,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "12567:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 969,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12601:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 967,
                        "name": "Base64",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "12587:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base64_$46_$",
                          "typeString": "type(library Base64)"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "12587:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (string memory)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12587:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12567:39:2"
                },
                {
                  "assignments": [
                    973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 973,
                      "mutability": "mutable",
                      "name": "notesHash",
                      "nameLocation": "12625:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "12617:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 972,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12617:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 982,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 977,
                            "name": "title",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "12678:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 978,
                            "name": "description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "12685:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 979,
                            "name": "pdf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "12698:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 975,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "12661:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "12661:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12661:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 974,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "12637:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12637:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12617:96:2"
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "newNotes",
                      "nameLocation": "12781:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "12768:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      },
                      "typeName": {
                        "id": 984,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 983,
                          "name": "Notes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123,
                          "src": "12768:5:2"
                        },
                        "referencedDeclaration": 123,
                        "src": "12768:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                          "typeString": "struct NotesExchange.Notes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12768:21:2"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 987,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "12800:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "forBuy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "12800:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12818:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12800:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "12800:23:2"
                },
                {
                  "expression": {
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 993,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "12834:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "notesValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 109,
                      "src": "12834:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 997,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "12865:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 133,
                          "src": "12865:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 996,
                        "name": "weiToEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "12856:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12856:32:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12834:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
                  "src": "12834:54:2"
                },
                {
                  "expression": {
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1002,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "12899:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noteTaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "12899:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1007,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12928:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12928:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12920:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1005,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12920:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12920:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12899:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "12899:40:2"
                },
                {
                  "expression": {
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1012,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "12950:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "12950:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12990:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12968:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1015,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12972:15:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1016,
                          "nodeType": "ArrayTypeName",
                          "src": "12972:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12968:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "12950:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                      "typeString": "address payable[] memory"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "12950:42:2"
                },
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1022,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "13003:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107,
                      "src": "13003:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1025,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "13017:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13003:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "13003:29:2"
                },
                {
                  "expression": {
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1028,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "13043:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "notesHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118,
                      "src": "13043:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1031,
                      "name": "notesHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "13064:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13043:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "13043:30:2"
                },
                {
                  "expression": {
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1034,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "13084:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120,
                      "src": "13084:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1037,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 932,
                      "src": "13101:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "13084:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "13084:22:2"
                },
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1040,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "13117:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122,
                      "src": "13117:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1043,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "13140:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "13117:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "13117:34:2"
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1046,
                        "name": "notesMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "13211:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                          "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                        }
                      },
                      "id": 1049,
                      "indexExpression": {
                        "expression": {
                          "id": 1047,
                          "name": "newNotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "13224:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                            "typeString": "struct NotesExchange.Notes memory"
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 107,
                        "src": "13224:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13211:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage",
                        "typeString": "struct NotesExchange.Notes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1050,
                      "name": "newNotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "13239:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                        "typeString": "struct NotesExchange.Notes memory"
                      }
                    },
                    "src": "13211:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "13211:36:2"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "13258:17:2",
                    "subExpression": {
                      "id": 1053,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "13258:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "13258:17:2"
                },
                {
                  "expression": {
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1056,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "13288:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "notes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 128,
                      "src": "13288:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage",
                        "typeString": "struct NotesExchange.Notes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1059,
                      "name": "newNotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "13304:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                        "typeString": "struct NotesExchange.Notes memory"
                      }
                    },
                    "src": "13288:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "13288:24:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1063,
                        "name": "newNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "13345:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      ],
                      "id": 1062,
                      "name": "NotesPublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "13330:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Notes_$123_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.Notes memory)"
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13330:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1065,
                  "nodeType": "EmitStatement",
                  "src": "13325:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1067,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "13401:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 1066,
                      "name": "NotesServiceAwaitingAcceptance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "13370:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13370:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1069,
                  "nodeType": "EmitStatement",
                  "src": "13365:44:2"
                }
              ]
            },
            "functionSelector": "cd4f58df",
            "id": 1071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 939,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "12335:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 941,
                    "indexExpression": {
                      "id": 940,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 930,
                      "src": "12347:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12335:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  {
                    "expression": {
                      "id": 942,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "12359:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Pending",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101,
                    "src": "12359:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 944,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 938,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "12327:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12327:46:2"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 946,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "12397:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 948,
                    "indexExpression": {
                      "id": 947,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 930,
                      "src": "12409:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12397:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  }
                ],
                "id": 949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 945,
                  "name": "onlyFulfiller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "12383:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12383:37:2"
              }
            ],
            "name": "fulfillNotesService",
            "nameLocation": "12136:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "12174:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "12166:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12166:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "12208:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "12194:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12194:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "12238:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "12224:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12224:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12273:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "12260:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12260:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12155:129:2"
            },
            "returnParameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12426:0:2"
            },
            "scope": 1522,
            "src": "12127:1290:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1133,
              "nodeType": "Block",
              "src": "13560:607:2",
              "statements": [
                {
                  "assignments": [
                    1085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1085,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "13592:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1133,
                      "src": "13571:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 1084,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1083,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "13571:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "13571:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1086,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "13602:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 1088,
                    "indexExpression": {
                      "id": 1087,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "13614:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13602:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13571:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1091,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1085,
                            "src": "13657:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "13657:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1095,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "13683:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13683:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13675:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1093,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13675:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13675:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "13657:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652072656e7465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13709:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        },
                        "value": "Only the renter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a03417a4892fc1807b08902fddc7586b267ff5acbc18bb9cc9d48c7ae597fe63",
                          "typeString": "literal_string \"Only the renter can call this function\""
                        }
                      ],
                      "id": 1090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13635:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13635:125:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "13635:125:2"
                },
                {
                  "expression": {
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1102,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "13864:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "13864:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1105,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "13891:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                          "typeString": "type(enum NotesExchange.State)"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 103,
                      "src": "13891:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$105",
                        "typeString": "enum NotesExchange.State"
                      }
                    },
                    "src": "13864:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "13864:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1114,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "13946:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedMoney",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 133,
                        "src": "13946:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1109,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "13919:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fulfiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 137,
                        "src": "13919:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "13919:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13919:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "13919:50:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1125,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "14049:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService storage pointer"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "14049:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 1118,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1085,
                            "src": "14023:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                              "typeString": "struct NotesExchange.NotesService storage pointer"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "notes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 128,
                          "src": "14023:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage",
                            "typeString": "struct NotesExchange.Notes storage ref"
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 114,
                        "src": "14023:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14023:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14023:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "14023:41:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1130,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "14151:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService storage pointer"
                        }
                      ],
                      "id": 1129,
                      "name": "NotesServiceCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "14129:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_NotesService_$142_memory_ptr_$returns$__$",
                        "typeString": "function (struct NotesExchange.NotesService memory)"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14129:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "EmitStatement",
                  "src": "14124:35:2"
                }
              ]
            },
            "functionSelector": "c0b1a123",
            "id": 1134,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 1076,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "13505:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 1078,
                    "indexExpression": {
                      "id": 1077,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "13517:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13505:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  {
                    "expression": {
                      "id": 1079,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13529:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$105_$",
                        "typeString": "type(enum NotesExchange.State)"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "AwaitingAcceptance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 102,
                    "src": "13529:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$105",
                      "typeString": "enum NotesExchange.State"
                    }
                  }
                ],
                "id": 1081,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1075,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 261,
                  "src": "13497:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13497:57:2"
              }
            ],
            "name": "acceptNotesService",
            "nameLocation": "13434:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "13461:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "13453:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13452:19:2"
            },
            "returnParameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13560:0:2"
            },
            "scope": 1522,
            "src": "13425:742:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "14267:47:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1141,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "14293:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NotesExchange_$1522",
                            "typeString": "contract NotesExchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NotesExchange_$1522",
                            "typeString": "contract NotesExchange"
                          }
                        ],
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14285:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14285:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14285:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14285:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1138,
                  "id": 1144,
                  "nodeType": "Return",
                  "src": "14278:28:2"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "14224:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14234:2:2"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "14258:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14258:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14257:9:2"
            },
            "scope": 1522,
            "src": "14215:99:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1200,
              "nodeType": "Block",
              "src": "14452:463:2",
              "statements": [
                {
                  "assignments": [
                    1157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1157,
                      "mutability": "mutable",
                      "name": "notesOnSale",
                      "nameLocation": "14607:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "14592:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct NotesExchange.Notes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1155,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1154,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "14592:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "14592:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ArrayTypeName",
                        "src": "14592:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1164,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1162,
                        "name": "notesTotalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "14633:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14621:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct NotesExchange.Notes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1159,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1158,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "14625:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "14625:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ArrayTypeName",
                        "src": "14625:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14621:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14592:57:2"
                },
                {
                  "assignments": [
                    1166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1166,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "14668:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "14660:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14660:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1168,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14674:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14660:15:2"
                },
                {
                  "body": {
                    "id": 1196,
                    "nodeType": "Block",
                    "src": "14732:147:2",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "baseExpression": {
                              "id": 1179,
                              "name": "notesMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "14751:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                              }
                            },
                            "id": 1181,
                            "indexExpression": {
                              "id": 1180,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "14764:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14751:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_storage",
                              "typeString": "struct NotesExchange.Notes storage ref"
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "forBuy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 116,
                          "src": "14751:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1195,
                        "nodeType": "IfStatement",
                        "src": "14747:121:2",
                        "trueBody": {
                          "id": 1194,
                          "nodeType": "Block",
                          "src": "14775:93:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1183,
                                    "name": "notesOnSale",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "14794:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct NotesExchange.Notes memory[] memory"
                                    }
                                  },
                                  "id": 1185,
                                  "indexExpression": {
                                    "id": 1184,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1166,
                                    "src": "14806:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14794:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                    "typeString": "struct NotesExchange.Notes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1186,
                                    "name": "notesMapping",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "14813:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                      "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                    }
                                  },
                                  "id": 1188,
                                  "indexExpression": {
                                    "id": 1187,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1170,
                                    "src": "14826:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14813:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Notes_$123_storage",
                                    "typeString": "struct NotesExchange.Notes storage ref"
                                  }
                                },
                                "src": "14794:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                  "typeString": "struct NotesExchange.Notes memory"
                                }
                              },
                              "id": 1190,
                              "nodeType": "ExpressionStatement",
                              "src": "14794:34:2"
                            },
                            {
                              "expression": {
                                "id": 1192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "14847:5:2",
                                "subExpression": {
                                  "id": 1191,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "14847:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1193,
                              "nodeType": "ExpressionStatement",
                              "src": "14847:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1173,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "14706:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1174,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "14710:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14706:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1197,
                  "initializationExpression": {
                    "assignments": [
                      1170
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14699:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1197,
                        "src": "14691:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14691:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1172,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14703:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14691:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14727:3:2",
                      "subExpression": {
                        "id": 1176,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "14727:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1178,
                    "nodeType": "ExpressionStatement",
                    "src": "14727:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "14686:193:2"
                },
                {
                  "expression": {
                    "id": 1198,
                    "name": "notesOnSale",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1157,
                    "src": "14896:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1152,
                  "id": 1199,
                  "nodeType": "Return",
                  "src": "14889:18:2"
                }
              ]
            },
            "functionSelector": "4e86b87d",
            "id": 1201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllNotesOnSale",
            "nameLocation": "14395:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14412:2:2"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "14436:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NotesExchange.Notes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1149,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1148,
                        "name": "Notes",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 123,
                        "src": "14436:5:2"
                      },
                      "referencedDeclaration": 123,
                      "src": "14436:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      }
                    },
                    "id": 1150,
                    "nodeType": "ArrayTypeName",
                    "src": "14436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                      "typeString": "struct NotesExchange.Notes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14435:16:2"
            },
            "scope": 1522,
            "src": "14386:529:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "15033:537:2",
              "statements": [
                {
                  "assignments": [
                    1209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1209,
                      "mutability": "mutable",
                      "name": "myNotesCount",
                      "nameLocation": "15052:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1286,
                      "src": "15044:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15044:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15067:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15044:24:2"
                },
                {
                  "body": {
                    "id": 1234,
                    "nodeType": "Block",
                    "src": "15125:114:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1223,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15149:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15149:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1225,
                                "name": "notesMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "15161:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                  "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                }
                              },
                              "id": 1227,
                              "indexExpression": {
                                "id": 1226,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1213,
                                "src": "15174:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15161:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Notes_$123_storage",
                                "typeString": "struct NotesExchange.Notes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Notes_$123_storage",
                                "typeString": "struct NotesExchange.Notes storage ref"
                              }
                            ],
                            "id": 1222,
                            "name": "owns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "15144:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_Notes_$123_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,struct NotesExchange.Notes memory) pure returns (bool)"
                            }
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15144:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1233,
                        "nodeType": "IfStatement",
                        "src": "15140:88:2",
                        "trueBody": {
                          "id": 1232,
                          "nodeType": "Block",
                          "src": "15179:49:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15198:14:2",
                                "subExpression": {
                                  "id": 1229,
                                  "name": "myNotesCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "15198:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "15198:14:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1216,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "15099:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1217,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "15103:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15099:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1235,
                  "initializationExpression": {
                    "assignments": [
                      1213
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15092:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1235,
                        "src": "15084:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15084:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1215,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15096:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15084:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15120:3:2",
                      "subExpression": {
                        "id": 1219,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "15120:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1221,
                    "nodeType": "ExpressionStatement",
                    "src": "15120:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15079:160:2"
                },
                {
                  "assignments": [
                    1240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "myNotes",
                      "nameLocation": "15266:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1286,
                      "src": "15251:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct NotesExchange.Notes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1237,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "15251:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "15251:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1239,
                        "nodeType": "ArrayTypeName",
                        "src": "15251:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1247,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1245,
                        "name": "myNotesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "15288:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15276:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct NotesExchange.Notes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1242,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1241,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "15280:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "15280:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1243,
                        "nodeType": "ArrayTypeName",
                        "src": "15280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15276:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15251:50:2"
                },
                {
                  "assignments": [
                    1249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "15320:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1286,
                      "src": "15312:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15312:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15326:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15312:15:2"
                },
                {
                  "body": {
                    "id": 1282,
                    "nodeType": "Block",
                    "src": "15384:154:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1263,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15408:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15408:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1265,
                                "name": "notesMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "15420:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                  "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                }
                              },
                              "id": 1267,
                              "indexExpression": {
                                "id": 1266,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1253,
                                "src": "15433:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15420:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Notes_$123_storage",
                                "typeString": "struct NotesExchange.Notes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Notes_$123_storage",
                                "typeString": "struct NotesExchange.Notes storage ref"
                              }
                            ],
                            "id": 1262,
                            "name": "owns",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "15403:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_Notes_$123_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,struct NotesExchange.Notes memory) pure returns (bool)"
                            }
                          },
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15403:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1281,
                        "nodeType": "IfStatement",
                        "src": "15399:128:2",
                        "trueBody": {
                          "id": 1280,
                          "nodeType": "Block",
                          "src": "15438:89:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1269,
                                    "name": "myNotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1240,
                                    "src": "15457:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct NotesExchange.Notes memory[] memory"
                                    }
                                  },
                                  "id": 1271,
                                  "indexExpression": {
                                    "id": 1270,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1249,
                                    "src": "15465:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15457:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                    "typeString": "struct NotesExchange.Notes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1272,
                                    "name": "notesMapping",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "15472:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                      "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                    }
                                  },
                                  "id": 1274,
                                  "indexExpression": {
                                    "id": 1273,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1253,
                                    "src": "15485:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15472:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Notes_$123_storage",
                                    "typeString": "struct NotesExchange.Notes storage ref"
                                  }
                                },
                                "src": "15457:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                  "typeString": "struct NotesExchange.Notes memory"
                                }
                              },
                              "id": 1276,
                              "nodeType": "ExpressionStatement",
                              "src": "15457:30:2"
                            },
                            {
                              "expression": {
                                "id": 1278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15506:5:2",
                                "subExpression": {
                                  "id": 1277,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1249,
                                  "src": "15506:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1279,
                              "nodeType": "ExpressionStatement",
                              "src": "15506:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1256,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "15358:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1257,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "15362:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15358:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1283,
                  "initializationExpression": {
                    "assignments": [
                      1253
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15351:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1283,
                        "src": "15343:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15343:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1255,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15355:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15343:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15379:3:2",
                      "subExpression": {
                        "id": 1259,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "15379:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1261,
                    "nodeType": "ExpressionStatement",
                    "src": "15379:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15338:200:2"
                },
                {
                  "expression": {
                    "id": 1284,
                    "name": "myNotes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1240,
                    "src": "15555:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1207,
                  "id": 1285,
                  "nodeType": "Return",
                  "src": "15548:14:2"
                }
              ]
            },
            "functionSelector": "86f17bb7",
            "id": 1287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyNotes",
            "nameLocation": "14983:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14993:2:2"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "15017:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NotesExchange.Notes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1204,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1203,
                        "name": "Notes",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 123,
                        "src": "15017:5:2"
                      },
                      "referencedDeclaration": 123,
                      "src": "15017:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      }
                    },
                    "id": 1205,
                    "nodeType": "ArrayTypeName",
                    "src": "15017:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                      "typeString": "struct NotesExchange.Notes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15016:16:2"
            },
            "scope": 1522,
            "src": "14974:596:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1353,
              "nodeType": "Block",
              "src": "15711:446:2",
              "statements": [
                {
                  "assignments": [
                    1295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1295,
                      "mutability": "mutable",
                      "name": "myNotesCount",
                      "nameLocation": "15730:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1353,
                      "src": "15722:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15722:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1297,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15745:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15722:24:2"
                },
                {
                  "assignments": [
                    1302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1302,
                      "mutability": "mutable",
                      "name": "myNotes",
                      "nameLocation": "15772:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1353,
                      "src": "15757:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct NotesExchange.Notes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1300,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1299,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "15757:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "15757:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1301,
                        "nodeType": "ArrayTypeName",
                        "src": "15757:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1309,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1307,
                        "name": "myNotesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "15794:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15782:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct NotesExchange.Notes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1304,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1303,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "15786:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "15786:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1305,
                        "nodeType": "ArrayTypeName",
                        "src": "15786:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15782:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15757:50:2"
                },
                {
                  "assignments": [
                    1311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1311,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "15826:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1353,
                      "src": "15818:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15818:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1313,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15832:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15818:15:2"
                },
                {
                  "body": {
                    "id": 1349,
                    "nodeType": "Block",
                    "src": "15890:235:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1324,
                                  "name": "notesMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89,
                                  "src": "15927:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                    "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                  }
                                },
                                "id": 1326,
                                "indexExpression": {
                                  "id": 1325,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "15940:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15927:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Notes_$123_storage",
                                  "typeString": "struct NotesExchange.Notes storage ref"
                                }
                              },
                              "id": 1327,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "noteTaker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "15927:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1328,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15956:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15956:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15927:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1331,
                                "name": "notesMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "15987:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                  "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                }
                              },
                              "id": 1333,
                              "indexExpression": {
                                "id": 1332,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1315,
                                "src": "16000:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15987:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Notes_$123_storage",
                                "typeString": "struct NotesExchange.Notes storage ref"
                              }
                            },
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "forBuy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 116,
                            "src": "15987:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15927:82:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1348,
                        "nodeType": "IfStatement",
                        "src": "15905:209:2",
                        "trueBody": {
                          "id": 1347,
                          "nodeType": "Block",
                          "src": "16025:89:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1336,
                                    "name": "myNotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1302,
                                    "src": "16044:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct NotesExchange.Notes memory[] memory"
                                    }
                                  },
                                  "id": 1338,
                                  "indexExpression": {
                                    "id": 1337,
                                    "name": "idx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1311,
                                    "src": "16052:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16044:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                    "typeString": "struct NotesExchange.Notes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1339,
                                    "name": "notesMapping",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "16059:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                      "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                                    }
                                  },
                                  "id": 1341,
                                  "indexExpression": {
                                    "id": 1340,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1315,
                                    "src": "16072:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16059:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Notes_$123_storage",
                                    "typeString": "struct NotesExchange.Notes storage ref"
                                  }
                                },
                                "src": "16044:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                  "typeString": "struct NotesExchange.Notes memory"
                                }
                              },
                              "id": 1343,
                              "nodeType": "ExpressionStatement",
                              "src": "16044:30:2"
                            },
                            {
                              "expression": {
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "16093:5:2",
                                "subExpression": {
                                  "id": 1344,
                                  "name": "idx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1311,
                                  "src": "16093:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1346,
                              "nodeType": "ExpressionStatement",
                              "src": "16093:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1318,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "15864:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1319,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "15868:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15864:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1350,
                  "initializationExpression": {
                    "assignments": [
                      1315
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15857:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "15849:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15849:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1317,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15861:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15849:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15885:3:2",
                      "subExpression": {
                        "id": 1321,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "15885:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1323,
                    "nodeType": "ExpressionStatement",
                    "src": "15885:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15844:281:2"
                },
                {
                  "expression": {
                    "id": 1351,
                    "name": "myNotes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1302,
                    "src": "16142:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1293,
                  "id": 1352,
                  "nodeType": "Return",
                  "src": "16135:14:2"
                }
              ]
            },
            "functionSelector": "e05fd1f4",
            "id": 1354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyNotesOnSale",
            "nameLocation": "15655:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15671:2:2"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "15695:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NotesExchange.Notes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1290,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1289,
                        "name": "Notes",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 123,
                        "src": "15695:5:2"
                      },
                      "referencedDeclaration": 123,
                      "src": "15695:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      }
                    },
                    "id": 1291,
                    "nodeType": "ArrayTypeName",
                    "src": "15695:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                      "typeString": "struct NotesExchange.Notes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15694:16:2"
            },
            "scope": 1522,
            "src": "15646:511:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1395,
              "nodeType": "Block",
              "src": "16247:211:2",
              "statements": [
                {
                  "assignments": [
                    1365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1365,
                      "mutability": "mutable",
                      "name": "allNotes",
                      "nameLocation": "16273:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1395,
                      "src": "16258:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct NotesExchange.Notes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1363,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1362,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "16258:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "16258:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1364,
                        "nodeType": "ArrayTypeName",
                        "src": "16258:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1372,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1370,
                        "name": "notesTotalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "16296:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "16284:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct NotesExchange.Notes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1367,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1366,
                            "name": "Notes",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 123,
                            "src": "16288:5:2"
                          },
                          "referencedDeclaration": 123,
                          "src": "16288:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                            "typeString": "struct NotesExchange.Notes"
                          }
                        },
                        "id": 1368,
                        "nodeType": "ArrayTypeName",
                        "src": "16288:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.Notes[]"
                        }
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16284:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16258:54:2"
                },
                {
                  "body": {
                    "id": 1391,
                    "nodeType": "Block",
                    "src": "16369:56:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1383,
                              "name": "allNotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1365,
                              "src": "16384:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct NotesExchange.Notes memory[] memory"
                              }
                            },
                            "id": 1385,
                            "indexExpression": {
                              "id": 1384,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "16393:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16384:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                              "typeString": "struct NotesExchange.Notes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1386,
                              "name": "notesMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "16398:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                                "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                              }
                            },
                            "id": 1388,
                            "indexExpression": {
                              "id": 1387,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "16411:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16398:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Notes_$123_storage",
                              "typeString": "struct NotesExchange.Notes storage ref"
                            }
                          },
                          "src": "16384:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                            "typeString": "struct NotesExchange.Notes memory"
                          }
                        },
                        "id": 1390,
                        "nodeType": "ExpressionStatement",
                        "src": "16384:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1377,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "16343:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1378,
                      "name": "notesTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "16347:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16343:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1392,
                  "initializationExpression": {
                    "assignments": [
                      1374
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1374,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16336:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1392,
                        "src": "16328:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16328:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1376,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16340:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16328:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16364:3:2",
                      "subExpression": {
                        "id": 1380,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "16364:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1382,
                    "nodeType": "ExpressionStatement",
                    "src": "16364:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "16323:102:2"
                },
                {
                  "expression": {
                    "id": 1393,
                    "name": "allNotes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1365,
                    "src": "16442:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1360,
                  "id": 1394,
                  "nodeType": "Return",
                  "src": "16435:15:2"
                }
              ]
            },
            "functionSelector": "de8f430c",
            "id": 1396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllNotes",
            "nameLocation": "16196:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16207:2:2"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1396,
                  "src": "16231:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Notes_$123_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NotesExchange.Notes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1357,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1356,
                        "name": "Notes",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 123,
                        "src": "16231:5:2"
                      },
                      "referencedDeclaration": 123,
                      "src": "16231:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      }
                    },
                    "id": 1358,
                    "nodeType": "ArrayTypeName",
                    "src": "16231:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Notes_$123_storage_$dyn_storage_ptr",
                      "typeString": "struct NotesExchange.Notes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16230:16:2"
            },
            "scope": 1522,
            "src": "16187:271:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1437,
              "nodeType": "Block",
              "src": "16561:228:2",
              "statements": [
                {
                  "assignments": [
                    1407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1407,
                      "mutability": "mutable",
                      "name": "allServs",
                      "nameLocation": "16594:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "16572:30:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct NotesExchange.NotesService[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1405,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1404,
                            "name": "NotesService",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 142,
                            "src": "16572:12:2"
                          },
                          "referencedDeclaration": 142,
                          "src": "16572:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService"
                          }
                        },
                        "id": 1406,
                        "nodeType": "ArrayTypeName",
                        "src": "16572:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NotesService_$142_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1414,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1412,
                        "name": "rentingTotalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "16624:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "16605:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct NotesExchange.NotesService memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1409,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1408,
                            "name": "NotesService",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 142,
                            "src": "16609:12:2"
                          },
                          "referencedDeclaration": 142,
                          "src": "16609:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                            "typeString": "struct NotesExchange.NotesService"
                          }
                        },
                        "id": 1410,
                        "nodeType": "ArrayTypeName",
                        "src": "16609:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NotesService_$142_storage_$dyn_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService[]"
                        }
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16605:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.NotesService memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16572:70:2"
                },
                {
                  "body": {
                    "id": 1433,
                    "nodeType": "Block",
                    "src": "16701:55:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1425,
                              "name": "allServs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1407,
                              "src": "16716:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct NotesExchange.NotesService memory[] memory"
                              }
                            },
                            "id": 1427,
                            "indexExpression": {
                              "id": 1426,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1416,
                              "src": "16725:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16716:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                              "typeString": "struct NotesExchange.NotesService memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1428,
                              "name": "rentingList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "16730:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                                "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                              }
                            },
                            "id": 1430,
                            "indexExpression": {
                              "id": 1429,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1416,
                              "src": "16742:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16730:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NotesService_$142_storage",
                              "typeString": "struct NotesExchange.NotesService storage ref"
                            }
                          },
                          "src": "16716:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                            "typeString": "struct NotesExchange.NotesService memory"
                          }
                        },
                        "id": 1432,
                        "nodeType": "ExpressionStatement",
                        "src": "16716:28:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1419,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1416,
                      "src": "16673:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1420,
                      "name": "rentingTotalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "16677:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16673:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1434,
                  "initializationExpression": {
                    "assignments": [
                      1416
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16666:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "16658:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16658:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1418,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16670:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16658:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16696:3:2",
                      "subExpression": {
                        "id": 1422,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "16696:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1424,
                    "nodeType": "ExpressionStatement",
                    "src": "16696:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "16653:103:2"
                },
                {
                  "expression": {
                    "id": 1435,
                    "name": "allServs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1407,
                    "src": "16773:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NotesExchange.NotesService memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1402,
                  "id": 1436,
                  "nodeType": "Return",
                  "src": "16766:15:2"
                }
              ]
            },
            "functionSelector": "21fe0f30",
            "id": 1438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllServices",
            "nameLocation": "16500:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16514:2:2"
            },
            "returnParameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "16538:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NotesService_$142_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1399,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1398,
                        "name": "NotesService",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "16538:12:2"
                      },
                      "referencedDeclaration": 142,
                      "src": "16538:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      }
                    },
                    "id": 1400,
                    "nodeType": "ArrayTypeName",
                    "src": "16538:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NotesService_$142_storage_$dyn_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16537:23:2"
            },
            "scope": 1522,
            "src": "16491:298:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1445,
              "nodeType": "Block",
              "src": "16890:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 1443,
                    "name": "notesTotalCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 97,
                    "src": "16908:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1442,
                  "id": 1444,
                  "nodeType": "Return",
                  "src": "16901:22:2"
                }
              ]
            },
            "functionSelector": "8596982d",
            "id": 1446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNotesCount",
            "nameLocation": "16844:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16857:2:2"
            },
            "returnParameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "16881:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16881:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16880:9:2"
            },
            "scope": 1522,
            "src": "16835:96:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "17042:258:2",
              "statements": [
                {
                  "assignments": [
                    1456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1456,
                      "mutability": "mutable",
                      "name": "notes",
                      "nameLocation": "17066:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1493,
                      "src": "17053:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                        "typeString": "struct NotesExchange.Notes"
                      },
                      "typeName": {
                        "id": 1455,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1454,
                          "name": "Notes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123,
                          "src": "17053:5:2"
                        },
                        "referencedDeclaration": 123,
                        "src": "17053:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                          "typeString": "struct NotesExchange.Notes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1460,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1457,
                      "name": "notesMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "17074:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Notes_$123_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.Notes storage ref)"
                      }
                    },
                    "id": 1459,
                    "indexExpression": {
                      "id": 1458,
                      "name": "notesId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "17087:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17074:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage",
                      "typeString": "struct NotesExchange.Notes storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17053:42:2"
                },
                {
                  "assignments": [
                    1465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1465,
                      "mutability": "mutable",
                      "name": "owners",
                      "nameLocation": "17123:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1493,
                      "src": "17106:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1463,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17106:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1464,
                        "nodeType": "ArrayTypeName",
                        "src": "17106:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1466,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17106:23:2"
                },
                {
                  "body": {
                    "id": 1488,
                    "nodeType": "Block",
                    "src": "17214:54:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1479,
                              "name": "owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "17229:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1481,
                            "indexExpression": {
                              "id": 1480,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "17236:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17229:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1482,
                                "name": "notes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1456,
                                "src": "17241:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                                  "typeString": "struct NotesExchange.Notes memory"
                                }
                              },
                              "id": 1483,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 114,
                              "src": "17241:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                "typeString": "address payable[] memory"
                              }
                            },
                            "id": 1485,
                            "indexExpression": {
                              "id": 1484,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "17254:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17241:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "17229:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1487,
                        "nodeType": "ExpressionStatement",
                        "src": "17229:27:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1471,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1468,
                      "src": "17184:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1472,
                          "name": "notes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1456,
                          "src": "17188:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                            "typeString": "struct NotesExchange.Notes memory"
                          }
                        },
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 114,
                        "src": "17188:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        }
                      },
                      "id": 1474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "17188:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17184:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1489,
                  "initializationExpression": {
                    "assignments": [
                      1468
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1468,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17177:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1489,
                        "src": "17169:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17169:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1470,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17181:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17169:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17209:3:2",
                      "subExpression": {
                        "id": 1476,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "17209:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1478,
                    "nodeType": "ExpressionStatement",
                    "src": "17209:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "17164:104:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1490,
                        "name": "notes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1456,
                        "src": "17286:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                          "typeString": "struct NotesExchange.Notes memory"
                        }
                      }
                    ],
                    "id": 1491,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17285:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                      "typeString": "struct NotesExchange.Notes memory"
                    }
                  },
                  "functionReturnParameters": 1453,
                  "id": 1492,
                  "nodeType": "Return",
                  "src": "17278:14:2"
                }
              ]
            },
            "functionSelector": "a965a941",
            "id": 1494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNote",
            "nameLocation": "16982:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "notesId",
                  "nameLocation": "16998:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "16990:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16990:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16989:17:2"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1452,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "17028:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Notes_$123_memory_ptr",
                    "typeString": "struct NotesExchange.Notes"
                  },
                  "typeName": {
                    "id": 1451,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1450,
                      "name": "Notes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "17028:5:2"
                    },
                    "referencedDeclaration": 123,
                    "src": "17028:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Notes_$123_storage_ptr",
                      "typeString": "struct NotesExchange.Notes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17027:14:2"
            },
            "scope": 1522,
            "src": "16973:327:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1501,
              "nodeType": "Block",
              "src": "17404:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 1499,
                    "name": "rentingTotalCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100,
                    "src": "17422:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1498,
                  "id": 1500,
                  "nodeType": "Return",
                  "src": "17415:24:2"
                }
              ]
            },
            "functionSelector": "6468ce28",
            "id": 1502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getServicesCount",
            "nameLocation": "17355:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17371:2:2"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "17395:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17395:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17394:9:2"
            },
            "scope": 1522,
            "src": "17346:101:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1520,
              "nodeType": "Block",
              "src": "17602:98:2",
              "statements": [
                {
                  "assignments": [
                    1512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1512,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "17633:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "17613:27:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                        "typeString": "struct NotesExchange.NotesService"
                      },
                      "typeName": {
                        "id": 1511,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1510,
                          "name": "NotesService",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "17613:12:2"
                        },
                        "referencedDeclaration": 142,
                        "src": "17613:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                          "typeString": "struct NotesExchange.NotesService"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1516,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1513,
                      "name": "rentingList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "17643:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NotesService_$142_storage_$",
                        "typeString": "mapping(uint256 => struct NotesExchange.NotesService storage ref)"
                      }
                    },
                    "id": 1515,
                    "indexExpression": {
                      "id": 1514,
                      "name": "rentingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1504,
                      "src": "17655:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17643:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage",
                      "typeString": "struct NotesExchange.NotesService storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17613:52:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1517,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1512,
                        "src": "17684:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                          "typeString": "struct NotesExchange.NotesService memory"
                        }
                      }
                    ],
                    "id": 1518,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17683:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                      "typeString": "struct NotesExchange.NotesService memory"
                    }
                  },
                  "functionReturnParameters": 1509,
                  "id": 1519,
                  "nodeType": "Return",
                  "src": "17676:16:2"
                }
              ]
            },
            "functionSelector": "ef0e239b",
            "id": 1521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getService",
            "nameLocation": "17498:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "mutability": "mutable",
                  "name": "rentingId",
                  "nameLocation": "17517:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1521,
                  "src": "17509:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17509:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17508:19:2"
            },
            "returnParameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1521,
                  "src": "17576:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NotesService_$142_memory_ptr",
                    "typeString": "struct NotesExchange.NotesService"
                  },
                  "typeName": {
                    "id": 1507,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1506,
                      "name": "NotesService",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "17576:12:2"
                    },
                    "referencedDeclaration": 142,
                    "src": "17576:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NotesService_$142_storage_ptr",
                      "typeString": "struct NotesExchange.NotesService"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17575:21:2"
            },
            "scope": 1522,
            "src": "17489:211:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1523,
        "src": "132:17571:2",
        "usedErrors": []
      }
    ],
    "src": "33:17672:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x80b1e473245c03abbb3b5E1c4b00d36B8AA4aAB2",
      "transactionHash": "0xcb641ebbc77cd08c62e7d8e15a5de235be0959c010fd5f7118426c0e6c048eff"
    }
  },
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-07-18T11:47:07.158Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}